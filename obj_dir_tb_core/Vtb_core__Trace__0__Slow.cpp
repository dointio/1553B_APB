// Verilated -*- C++ -*-
// DESCRIPTION: Verilator output: Tracing implementation internals
#include "verilated_vcd_c.h"
#include "Vtb_core__Syms.h"


VL_ATTR_COLD void Vtb_core___024root__trace_init_sub__TOP__0(Vtb_core___024root* vlSelf, VerilatedVcd* tracep) {
    if (false && vlSelf) {}  // Prevent unused
    Vtb_core__Syms* const __restrict vlSymsp VL_ATTR_UNUSED = vlSelf->vlSymsp;
    VL_DEBUG_IF(VL_DBG_MSGF("+    Vtb_core___024root__trace_init_sub__TOP__0\n"); );
    // Init
    const int c = vlSymsp->__Vm_baseCode;
    // Body
    tracep->pushNamePrefix("tb_core ");
    tracep->declBit(c+308,"tb_data_clk", false,-1);
    tracep->declBit(c+309,"tb_rst", false,-1);
    tracep->declBus(c+11,"tb_din", false,-1, 1,0);
    tracep->declBus(c+12,"tb_dout", false,-1, 1,0);
    tracep->declBit(c+13,"tb_en_dout", false,-1);
    tracep->declBit(c+14,"tb_uart_loop", false,-1);
    tracep->declBus(c+313,"CLK_PERIOD", false,-1, 31,0);
    tracep->declBus(c+314,"RST_PERIOD", false,-1, 31,0);
    tracep->declBus(c+315,"CLK_SPEED_HZ", false,-1, 31,0);
    tracep->declBus(c+314,"BITS_PER_TRANS", false,-1, 31,0);
    tracep->declBus(c+316,"DELAY_COUNT", false,-1, 31,0);
    tracep->declBus(c+317,"CYCLES_PER_MHZ", false,-1, 31,0);
    tracep->declBus(c+317,"BIT_RATE_PER_MHZ", false,-1, 31,0);
    tracep->declBus(c+318,"SYNC_PULSE_LEN", false,-1, 31,0);
    tracep->declQuad(c+319,"BIT_PATTERN", false,-1, 49,0);
    tracep->declArray(c+321,"SYNTH_CLK", false,-1, 999,0);
    tracep->declArray(c+353,"sync_cmd_stat", false,-1, 149,0);
    tracep->declArray(c+358,"sync_data", false,-1, 149,0);
    tracep->declArray(c+15,"data_expand", false,-1, 799,0);
    tracep->declBus(c+40,"data", false,-1, 15,0);
    tracep->declArray(c+41,"reg_data", false,-1, 999,0);
    tracep->declBit(c+73,"parity_gen", false,-1);
    tracep->declBus(c+74,"xor_index", false,-1, 31,0);
    tracep->declBus(c+75,"cycle_index", false,-1, 31,0);
    tracep->declBus(c+76,"pos_counter", false,-1, 31,0);
    tracep->declBus(c+77,"delay_counter", false,-1, 31,0);
    tracep->pushNamePrefix("dut ");
    tracep->declBus(c+315,"clock_speed", false,-1, 31,0);
    tracep->declBus(c+315,"uart_baud_clock_speed", false,-1, 31,0);
    tracep->declBus(c+363,"uart_baud_rate", false,-1, 31,0);
    tracep->declBus(c+364,"uart_parity_ena", false,-1, 31,0);
    tracep->declBus(c+365,"uart_parity_type", false,-1, 31,0);
    tracep->declBus(c+365,"uart_stop_bits", false,-1, 31,0);
    tracep->declBus(c+366,"uart_data_bits", false,-1, 31,0);
    tracep->declBus(c+364,"uart_rx_delay", false,-1, 31,0);
    tracep->declBus(c+364,"uart_tx_delay", false,-1, 31,0);
    tracep->declBus(c+367,"mil1553_sample_rate", false,-1, 31,0);
    tracep->declBus(c+364,"mil1553_rx_bit_slice_offset", false,-1, 31,0);
    tracep->declBus(c+364,"mil1553_rx_invert_data", false,-1, 31,0);
    tracep->declBus(c+364,"mil1553_rx_sample_select", false,-1, 31,0);
    tracep->declBit(c+308,"aclk", false,-1);
    tracep->declBit(c+310,"arstn", false,-1);
    tracep->declBit(c+308,"uart_clk", false,-1);
    tracep->declBit(c+310,"uart_rstn", false,-1);
    tracep->declBit(c+14,"rx_UART", false,-1);
    tracep->declBit(c+14,"tx_UART", false,-1);
    tracep->declBit(c+368,"rts_UART", false,-1);
    tracep->declBit(c+369,"cts_UART", false,-1);
    tracep->declBit(c+78,"rx0_1553", false,-1);
    tracep->declBit(c+79,"rx1_1553", false,-1);
    tracep->declBit(c+80,"tx0_1553", false,-1);
    tracep->declBit(c+81,"tx1_1553", false,-1);
    tracep->declBit(c+13,"en_tx_1553", false,-1);
    tracep->declBus(c+11,"rx_1553", false,-1, 1,0);
    tracep->declBus(c+12,"tx_1553", false,-1, 1,0);
    tracep->declBus(c+82,"m1553_decoder_data", false,-1, 15,0);
    tracep->declBit(c+83,"m1553_decoder_valid", false,-1);
    tracep->declBus(c+84,"m1553_decoder_user", false,-1, 7,0);
    tracep->declBit(c+85,"m1553_decoder_ready", false,-1);
    tracep->declBus(c+86,"mfifo_decoder_data", false,-1, 15,0);
    tracep->declBit(c+87,"mfifo_decoder_valid", false,-1);
    tracep->declBus(c+88,"mfifo_decoder_user", false,-1, 7,0);
    tracep->declBit(c+5,"mfifo_decoder_ready", false,-1);
    tracep->declArray(c+89,"mstring_encoder_data", false,-1, 167,0);
    tracep->declBit(c+95,"mstring_encoder_valid", false,-1);
    tracep->declBit(c+5,"mstring_encoder_ready", false,-1);
    tracep->declBus(c+96,"mstring_to_char_data", false,-1, 7,0);
    tracep->declBit(c+97,"mstring_to_char_valid", false,-1);
    tracep->declBit(c+6,"mstring_to_char_ready", false,-1);
    tracep->declBus(c+98,"mout_char_fifo_data", false,-1, 7,0);
    tracep->declBit(c+99,"mout_char_fifo_valid", false,-1);
    tracep->declBit(c+7,"mout_char_fifo_ready", false,-1);
    tracep->declBus(c+100,"muart_char_data", false,-1, 7,0);
    tracep->declBit(c+101,"muart_char_valid", false,-1);
    tracep->declBit(c+8,"muart_char_ready", false,-1);
    tracep->declBus(c+102,"min_char_fifo_data", false,-1, 7,0);
    tracep->declBit(c+103,"min_char_fifo_valid", false,-1);
    tracep->declBit(c+9,"min_char_fifo_ready", false,-1);
    tracep->declArray(c+104,"mchar_to_string_data", false,-1, 167,0);
    tracep->declBit(c+110,"mchar_to_string_valid", false,-1);
    tracep->declBit(c+111,"mchar_to_string_ready", false,-1);
    tracep->declBus(c+112,"mstring_decoder_data", false,-1, 15,0);
    tracep->declBit(c+113,"mstring_decoder_valid", false,-1);
    tracep->declBus(c+114,"mstring_decoder_user", false,-1, 7,0);
    tracep->declBit(c+115,"mstring_decoder_ready", false,-1);
    tracep->declBus(c+116,"mfifo_encoder_data", false,-1, 15,0);
    tracep->declBit(c+117,"mfifo_encoder_valid", false,-1);
    tracep->declBus(c+118,"mfifo_encoder_user", false,-1, 7,0);
    tracep->declBit(c+10,"mfifo_encoder_ready", false,-1);
    tracep->pushNamePrefix("axis_uart ");
    tracep->declBus(c+315,"baud_clock_speed", false,-1, 31,0);
    tracep->declBus(c+363,"baud_rate", false,-1, 31,0);
    tracep->declBus(c+364,"parity_ena", false,-1, 31,0);
    tracep->declBus(c+365,"parity_type", false,-1, 31,0);
    tracep->declBus(c+365,"stop_bits", false,-1, 31,0);
    tracep->declBus(c+366,"data_bits", false,-1, 31,0);
    tracep->declBus(c+364,"rx_delay", false,-1, 31,0);
    tracep->declBus(c+364,"rx_baud_delay", false,-1, 31,0);
    tracep->declBus(c+364,"tx_delay", false,-1, 31,0);
    tracep->declBus(c+364,"tx_baud_delay", false,-1, 31,0);
    tracep->declBit(c+308,"aclk", false,-1);
    tracep->declBit(c+310,"arstn", false,-1);
    tracep->declBus(c+98,"s_axis_tdata", false,-1, 7,0);
    tracep->declBit(c+99,"s_axis_tvalid", false,-1);
    tracep->declBit(c+7,"s_axis_tready", false,-1);
    tracep->declBus(c+100,"m_axis_tdata", false,-1, 7,0);
    tracep->declBit(c+101,"m_axis_tvalid", false,-1);
    tracep->declBit(c+8,"m_axis_tready", false,-1);
    tracep->declBit(c+308,"uart_clk", false,-1);
    tracep->declBit(c+310,"uart_rstn", false,-1);
    tracep->declBit(c+14,"tx", false,-1);
    tracep->declBit(c+14,"rx", false,-1);
    tracep->declBit(c+368,"rts", false,-1);
    tracep->declBit(c+369,"cts", false,-1);
    tracep->declBit(c+119,"uart_ena_tx", false,-1);
    tracep->declBit(c+120,"uart_ena_rx", false,-1);
    tracep->declBit(c+121,"uart_hold_rx", false,-1);
    tracep->pushNamePrefix("uart_baud_gen_rx ");
    tracep->declBus(c+315,"baud_clock_speed", false,-1, 31,0);
    tracep->declBus(c+363,"baud_rate", false,-1, 31,0);
    tracep->declBus(c+364,"delay", false,-1, 31,0);
    tracep->declBit(c+308,"uart_clk", false,-1);
    tracep->declBit(c+310,"uart_rstn", false,-1);
    tracep->declBit(c+121,"uart_hold", false,-1);
    tracep->declBit(c+120,"uart_ena", false,-1);
    tracep->declBus(c+122,"counter", false,-1, 26,0);
    tracep->declBit(c+120,"r_uart_ena", false,-1);
    tracep->popNamePrefix(1);
    tracep->pushNamePrefix("uart_baud_gen_tx ");
    tracep->declBus(c+315,"baud_clock_speed", false,-1, 31,0);
    tracep->declBus(c+363,"baud_rate", false,-1, 31,0);
    tracep->declBus(c+364,"delay", false,-1, 31,0);
    tracep->declBit(c+308,"uart_clk", false,-1);
    tracep->declBit(c+310,"uart_rstn", false,-1);
    tracep->declBit(c+370,"uart_hold", false,-1);
    tracep->declBit(c+119,"uart_ena", false,-1);
    tracep->declBus(c+123,"counter", false,-1, 26,0);
    tracep->declBit(c+119,"r_uart_ena", false,-1);
    tracep->popNamePrefix(1);
    tracep->pushNamePrefix("uart_rx ");
    tracep->declBus(c+364,"parity_ena", false,-1, 31,0);
    tracep->declBus(c+365,"parity_type", false,-1, 31,0);
    tracep->declBus(c+365,"stop_bits", false,-1, 31,0);
    tracep->declBus(c+366,"data_bits", false,-1, 31,0);
    tracep->declBus(c+364,"delay", false,-1, 31,0);
    tracep->declBit(c+308,"aclk", false,-1);
    tracep->declBit(c+310,"arstn", false,-1);
    tracep->declBus(c+100,"m_axis_tdata", false,-1, 7,0);
    tracep->declBit(c+101,"m_axis_tvalid", false,-1);
    tracep->declBit(c+8,"m_axis_tready", false,-1);
    tracep->declBit(c+308,"uart_clk", false,-1);
    tracep->declBit(c+310,"uart_rstn", false,-1);
    tracep->declBit(c+120,"uart_ena", false,-1);
    tracep->declBit(c+121,"uart_hold", false,-1);
    tracep->declBit(c+14,"rxd", false,-1);
    tracep->declBus(c+371,"start_bit", false,-1, 31,0);
    tracep->declBus(c+372,"bits_per_trans", false,-1, 31,0);
    tracep->declBus(c+373,"data_cap", false,-1, 2,0);
    tracep->declBus(c+374,"data_reduce", false,-1, 2,0);
    tracep->declBus(c+375,"parity_gen", false,-1, 2,0);
    tracep->declBus(c+376,"trans", false,-1, 2,0);
    tracep->declBus(c+364,"error", false,-1, 31,0);
    tracep->declBus(c+377,"start_wait", false,-1, 1,0);
    tracep->declBus(c+378,"data_at_baud", false,-1, 1,0);
    tracep->declBus(c+124,"reg_data", false,-1, 9,0);
    tracep->declBit(c+125,"parity_bit", false,-1);
    tracep->declBus(c+126,"state", false,-1, 2,0);
    tracep->declBus(c+127,"uart_state", false,-1, 1,0);
    tracep->declBus(c+128,"data", false,-1, 7,0);
    tracep->declBus(c+129,"trans_counter", false,-1, 3,0);
    tracep->declBus(c+130,"prev_trans_counter", false,-1, 3,0);
    tracep->declBit(c+131,"p_rxd", false,-1);
    tracep->declBit(c+132,"trans_fin", false,-1);
    tracep->declBit(c+14,"wire_rxd", false,-1);
    tracep->popNamePrefix(1);
    tracep->pushNamePrefix("uart_tx ");
    tracep->declBus(c+364,"parity_ena", false,-1, 31,0);
    tracep->declBus(c+365,"parity_type", false,-1, 31,0);
    tracep->declBus(c+365,"stop_bits", false,-1, 31,0);
    tracep->declBus(c+366,"data_bits", false,-1, 31,0);
    tracep->declBus(c+364,"delay", false,-1, 31,0);
    tracep->declBit(c+308,"aclk", false,-1);
    tracep->declBit(c+310,"arstn", false,-1);
    tracep->declBus(c+98,"s_axis_tdata", false,-1, 7,0);
    tracep->declBit(c+99,"s_axis_tvalid", false,-1);
    tracep->declBit(c+7,"s_axis_tready", false,-1);
    tracep->declBit(c+308,"uart_clk", false,-1);
    tracep->declBit(c+310,"uart_rstn", false,-1);
    tracep->declBit(c+119,"uart_ena", false,-1);
    tracep->declBit(c+14,"txd", false,-1);
    tracep->declBus(c+371,"start_bit", false,-1, 31,0);
    tracep->declBus(c+372,"bits_per_trans", false,-1, 31,0);
    tracep->declBus(c+373,"data_cap", false,-1, 2,0);
    tracep->declBus(c+374,"parity_gen", false,-1, 2,0);
    tracep->declBus(c+375,"process_param", false,-1, 2,0);
    tracep->declBus(c+376,"trans", false,-1, 2,0);
    tracep->declBus(c+379,"error", false,-1, 2,0);
    tracep->declBus(c+133,"reg_data", false,-1, 9,0);
    tracep->declBit(c+134,"parity_bit", false,-1);
    tracep->declBus(c+135,"state", false,-1, 2,0);
    tracep->declBus(c+136,"data", false,-1, 7,0);
    tracep->declBus(c+137,"trans_counter", false,-1, 3,0);
    tracep->declBus(c+138,"prev_trans_counter", false,-1, 3,0);
    tracep->declBit(c+139,"trans_fin", false,-1);
    tracep->declBit(c+14,"reg_txd", false,-1);
    tracep->popNamePrefix(2);
    tracep->pushNamePrefix("char_to_string ");
    tracep->declBus(c+380,"master_width", false,-1, 31,0);
    tracep->declBit(c+308,"aclk", false,-1);
    tracep->declBit(c+310,"arstn", false,-1);
    tracep->declBus(c+102,"s_axis_tdata", false,-1, 7,0);
    tracep->declBit(c+103,"s_axis_tvalid", false,-1);
    tracep->declBit(c+9,"s_axis_tready", false,-1);
    tracep->declArray(c+104,"m_axis_tdata", false,-1, 167,0);
    tracep->declBit(c+110,"m_axis_tvalid", false,-1);
    tracep->declBit(c+111,"m_axis_tready", false,-1);
    for (int i = 0; i < 21; ++i) {
        tracep->declBus(c+140+i*1,"reg_data_buffer", true,(i+0), 7,0);
    }
    tracep->declBit(c+110,"reg_data_valid", false,-1);
    tracep->declBus(c+161,"counter", false,-1, 5,0);
    tracep->declBus(c+162,"index", false,-1, 5,0);
    tracep->declBit(c+163,"p_m_axis_tready", false,-1);
    tracep->popNamePrefix(1);
    tracep->pushNamePrefix("decoder_fifo ");
    tracep->declBus(c+381,"FIFO_DEPTH", false,-1, 31,0);
    tracep->declBus(c+364,"COUNT_WIDTH", false,-1, 31,0);
    tracep->declBus(c+382,"BUS_WIDTH", false,-1, 31,0);
    tracep->declBus(c+366,"USER_WIDTH", false,-1, 31,0);
    tracep->declBus(c+365,"DEST_WIDTH", false,-1, 31,0);
    tracep->declQuad(c+383,"RAM_TYPE", false,-1, 39,0);
    tracep->declBus(c+364,"PACKET_MODE", false,-1, 31,0);
    tracep->declBus(c+364,"COUNT_DELAY", false,-1, 31,0);
    tracep->declBus(c+364,"COUNT_ENA", false,-1, 31,0);
    tracep->declBit(c+308,"m_axis_aclk", false,-1);
    tracep->declBit(c+310,"m_axis_arstn", false,-1);
    tracep->declBit(c+87,"m_axis_tvalid", false,-1);
    tracep->declBit(c+5,"m_axis_tready", false,-1);
    tracep->declBus(c+86,"m_axis_tdata", false,-1, 15,0);
    tracep->declBus(c+164,"m_axis_tkeep", false,-1, 1,0);
    tracep->declBit(c+165,"m_axis_tlast", false,-1);
    tracep->declBus(c+88,"m_axis_tuser", false,-1, 7,0);
    tracep->declBus(c+166,"m_axis_tdest", false,-1, 0,0);
    tracep->declBit(c+308,"s_axis_aclk", false,-1);
    tracep->declBit(c+310,"s_axis_arstn", false,-1);
    tracep->declBit(c+83,"s_axis_tvalid", false,-1);
    tracep->declBit(c+85,"s_axis_tready", false,-1);
    tracep->declBus(c+82,"s_axis_tdata", false,-1, 15,0);
    tracep->declBus(c+378,"s_axis_tkeep", false,-1, 1,0);
    tracep->declBit(c+370,"s_axis_tlast", false,-1);
    tracep->declBus(c+84,"s_axis_tuser", false,-1, 7,0);
    tracep->declBus(c+370,"s_axis_tdest", false,-1, 0,0);
    tracep->declBit(c+370,"data_count_aclk", false,-1);
    tracep->declBit(c+370,"data_count_arstn", false,-1);
    tracep->declBus(c+1,"data_count", false,-1, 0,0);
    tracep->declBus(c+385,"c_ARRAY_LENGTH", false,-1, 31,0);
    tracep->declBus(c+386,"c_TDATA_OFFSET", false,-1, 31,0);
    tracep->declBus(c+387,"c_TKEEP_OFFSET", false,-1, 31,0);
    tracep->declBus(c+382,"c_TUSER_OFFSET", false,-1, 31,0);
    tracep->declBus(c+365,"c_TDEST_OFFSET", false,-1, 31,0);
    tracep->declBus(c+364,"c_TLAST_OFFSET", false,-1, 31,0);
    tracep->declBus(c+366,"c_PWR_FIFO", false,-1, 31,0);
    tracep->declBus(c+381,"c_FIFO_DEPTH", false,-1, 31,0);
    tracep->declBus(c+388,"c_FIFO_WIDTH", false,-1, 31,0);
    tracep->declBus(c+167,"s_axis_concat_data", false,-1, 31,0);
    tracep->declBit(c+168,"s_wr_full", false,-1);
    tracep->declBit(c+169,"s_rd_valid", false,-1);
    tracep->declBit(c+170,"s_rd_empty", false,-1);
    tracep->declBit(c+5,"s_rd_en", false,-1);
    tracep->declBus(c+171,"s_rd_data", false,-1, 31,0);
    tracep->declBit(c+370,"open", false,-1);
    tracep->pushNamePrefix("axis_control ");
    tracep->declBus(c+382,"BUS_WIDTH", false,-1, 31,0);
    tracep->declBus(c+388,"FIFO_WIDTH", false,-1, 31,0);
    tracep->declBus(c+366,"FIFO_POWER", false,-1, 31,0);
    tracep->declBus(c+366,"USER_WIDTH", false,-1, 31,0);
    tracep->declBus(c+365,"DEST_WIDTH", false,-1, 31,0);
    tracep->declBus(c+364,"PACKET_MODE", false,-1, 31,0);
    tracep->declBit(c+308,"m_axis_aclk", false,-1);
    tracep->declBit(c+310,"m_axis_arstn", false,-1);
    tracep->declBit(c+87,"m_axis_tvalid", false,-1);
    tracep->declBit(c+5,"m_axis_tready", false,-1);
    tracep->declBus(c+86,"m_axis_tdata", false,-1, 15,0);
    tracep->declBus(c+164,"m_axis_tkeep", false,-1, 1,0);
    tracep->declBit(c+165,"m_axis_tlast", false,-1);
    tracep->declBus(c+88,"m_axis_tuser", false,-1, 7,0);
    tracep->declBus(c+166,"m_axis_tdest", false,-1, 0,0);
    tracep->declBit(c+370,"s_axis_tlast", false,-1);
    tracep->declBit(c+5,"rd_en", false,-1);
    tracep->declBit(c+169,"rd_valid", false,-1);
    tracep->declBus(c+171,"rd_data", false,-1, 31,0);
    tracep->declBit(c+170,"rd_empty", false,-1);
    tracep->declBit(c+168,"wr_full", false,-1);
    tracep->declBus(c+385,"c_ARRAY_LENGTH", false,-1, 31,0);
    tracep->declBus(c+386,"c_TDATA_OFFSET", false,-1, 31,0);
    tracep->declBus(c+387,"c_TKEEP_OFFSET", false,-1, 31,0);
    tracep->declBus(c+382,"c_TUSER_OFFSET", false,-1, 31,0);
    tracep->declBus(c+365,"c_TDEST_OFFSET", false,-1, 31,0);
    tracep->declBus(c+364,"c_TLAST_OFFSET", false,-1, 31,0);
    tracep->declBus(c+389,"c_FIFO_SIZE", false,-1, 7,0);
    tracep->declBus(c+390,"s_tlast_count", false,-1, 7,0);
    tracep->declBit(c+391,"r_mclk_s_axis_tlast", false,-1);
    tracep->declBit(c+392,"rr_mclk_s_axis_tlast", false,-1);
    tracep->declBit(c+393,"r_mclk_w_full", false,-1);
    tracep->declBit(c+394,"rr_mclk_w_full", false,-1);
    tracep->declBus(c+86,"s_m_axis_tdata", false,-1, 15,0);
    tracep->declBit(c+87,"s_m_axis_tvalid", false,-1);
    tracep->declBus(c+164,"s_m_axis_tkeep", false,-1, 1,0);
    tracep->declBit(c+165,"s_m_axis_tlast", false,-1);
    tracep->declBus(c+88,"s_m_axis_tuser", false,-1, 7,0);
    tracep->declBus(c+166,"s_m_axis_tdest", false,-1, 0,0);
    tracep->declBit(c+172,"r_rd_valid", false,-1);
    tracep->declBit(c+395,"s_tlast_full", false,-1);
    tracep->popNamePrefix(1);
    tracep->pushNamePrefix("axis_fifo ");
    tracep->declBus(c+381,"FIFO_DEPTH", false,-1, 31,0);
    tracep->declBus(c+388,"BYTE_WIDTH", false,-1, 31,0);
    tracep->declBus(c+364,"COUNT_WIDTH", false,-1, 31,0);
    tracep->declBus(c+365,"FWFT", false,-1, 31,0);
    tracep->declBus(c+364,"RD_SYNC_DEPTH", false,-1, 31,0);
    tracep->declBus(c+364,"WR_SYNC_DEPTH", false,-1, 31,0);
    tracep->declBus(c+364,"DC_SYNC_DEPTH", false,-1, 31,0);
    tracep->declBus(c+364,"COUNT_DELAY", false,-1, 31,0);
    tracep->declBus(c+364,"COUNT_ENA", false,-1, 31,0);
    tracep->declBus(c+365,"DATA_ZERO", false,-1, 31,0);
    tracep->declBus(c+364,"ACK_ENA", false,-1, 31,0);
    tracep->declQuad(c+383,"RAM_TYPE", false,-1, 39,0);
    tracep->declBit(c+308,"rd_clk", false,-1);
    tracep->declBit(c+310,"rd_rstn", false,-1);
    tracep->declBit(c+5,"rd_en", false,-1);
    tracep->declBit(c+169,"rd_valid", false,-1);
    tracep->declBus(c+171,"rd_data", false,-1, 31,0);
    tracep->declBit(c+170,"rd_empty", false,-1);
    tracep->declBit(c+308,"wr_clk", false,-1);
    tracep->declBit(c+310,"wr_rstn", false,-1);
    tracep->declBit(c+83,"wr_en", false,-1);
    tracep->declBit(c+370,"wr_ack", false,-1);
    tracep->declBus(c+167,"wr_data", false,-1, 31,0);
    tracep->declBit(c+168,"wr_full", false,-1);
    tracep->declBit(c+370,"data_count_clk", false,-1);
    tracep->declBit(c+370,"data_count_rstn", false,-1);
    tracep->declBus(c+1,"data_count", false,-1, 0,0);
    tracep->declBus(c+366,"c_PWR_FIFO", false,-1, 31,0);
    tracep->declBus(c+381,"c_FIFO_DEPTH", false,-1, 31,0);
    tracep->declBit(c+169,"s_rd_valid", false,-1);
    tracep->declBus(c+173,"s_rd_data", false,-1, 31,0);
    tracep->declBit(c+170,"s_rd_empty", false,-1);
    tracep->declBit(c+5,"s_rd_en", false,-1);
    tracep->declBit(c+311,"s_rd_mem_en", false,-1);
    tracep->declBus(c+174,"s_rd_addr", false,-1, 7,0);
    tracep->declBit(c+370,"s_wr_ack", false,-1);
    tracep->declBus(c+167,"s_wr_data", false,-1, 31,0);
    tracep->declBit(c+168,"s_wr_full", false,-1);
    tracep->declBit(c+83,"s_wr_en", false,-1);
    tracep->declBit(c+175,"s_wr_mem_en", false,-1);
    tracep->declBus(c+176,"s_wr_addr", false,-1, 7,0);
    tracep->declBus(c+1,"s_data_count", false,-1, 0,0);
    tracep->pushNamePrefix("control ");
    tracep->declBus(c+381,"FIFO_DEPTH", false,-1, 31,0);
    tracep->declBus(c+388,"BYTE_WIDTH", false,-1, 31,0);
    tracep->declBus(c+366,"ADDR_WIDTH", false,-1, 31,0);
    tracep->declBus(c+364,"COUNT_WIDTH", false,-1, 31,0);
    tracep->declBus(c+365,"GREY_CODE", false,-1, 31,0);
    tracep->declBus(c+364,"COUNT_DELAY", false,-1, 31,0);
    tracep->declBus(c+364,"COUNT_ENA", false,-1, 31,0);
    tracep->declBus(c+364,"ACK_ENA", false,-1, 31,0);
    tracep->declBus(c+365,"FWFT", false,-1, 31,0);
    tracep->declBit(c+308,"rd_clk", false,-1);
    tracep->declBit(c+310,"rd_rstn", false,-1);
    tracep->declBit(c+5,"rd_en", false,-1);
    tracep->declBus(c+174,"rd_addr", false,-1, 7,0);
    tracep->declBit(c+169,"rd_valid", false,-1);
    tracep->declBit(c+311,"rd_mem_en", false,-1);
    tracep->declBit(c+170,"rd_empty", false,-1);
    tracep->declBit(c+308,"wr_clk", false,-1);
    tracep->declBit(c+310,"wr_rstn", false,-1);
    tracep->declBit(c+83,"wr_en", false,-1);
    tracep->declBus(c+176,"wr_addr", false,-1, 7,0);
    tracep->declBit(c+370,"wr_ack", false,-1);
    tracep->declBit(c+175,"wr_mem_en", false,-1);
    tracep->declBit(c+168,"wr_full", false,-1);
    tracep->declBit(c+370,"data_count_clk", false,-1);
    tracep->declBit(c+370,"data_count_rstn", false,-1);
    tracep->declBus(c+1,"data_count", false,-1, 0,0);
    tracep->declBus(c+396,"idle", false,-1, 1,0);
    tracep->declBus(c+377,"push", false,-1, 1,0);
    tracep->declBus(c+397,"ready", false,-1, 1,0);
    tracep->declBus(c+177,"read_state", false,-1, 1,0);
    tracep->declBus(c+178,"head", false,-1, 7,0);
    tracep->declBus(c+179,"tail", false,-1, 7,0);
    tracep->declBus(c+180,"r_head", false,-1, 7,0);
    tracep->declBus(c+181,"r_tail", false,-1, 7,0);
    tracep->declBus(c+176,"r_gr_head", false,-1, 7,0);
    tracep->declBus(c+174,"r_gr_tail", false,-1, 7,0);
    tracep->declBus(c+182,"next_head", false,-1, 7,0);
    tracep->declBus(c+183,"next_tail", false,-1, 7,0);
    tracep->declBus(c+398,"r_next_head", false,-1, 7,0);
    tracep->declBus(c+398,"r_next_tail", false,-1, 7,0);
    tracep->declBus(c+184,"rd_head", false,-1, 7,0);
    tracep->declBus(c+185,"wr_tail", false,-1, 7,0);
    tracep->declBus(c+398,"r_dc_head", false,-1, 7,0);
    tracep->declBus(c+398,"r_dc_tail", false,-1, 7,0);
    tracep->declBit(c+370,"r_dc_fwft_count", false,-1);
    tracep->declBit(c+186,"rd_ctrl_mem", false,-1);
    tracep->declBit(c+170,"r_rd_empty", false,-1);
    tracep->declBit(c+187,"r_rd_rstn", false,-1);
    tracep->declBit(c+188,"r_wr_rstn", false,-1);
    tracep->declBus(c+2,"r_data_count", false,-1, 7,0);
    tracep->declBit(c+189,"r_fwft_count", false,-1);
    tracep->popNamePrefix(1);
    tracep->pushNamePrefix("memory ");
    tracep->declBus(c+381,"FIFO_DEPTH", false,-1, 31,0);
    tracep->declBus(c+388,"BYTE_WIDTH", false,-1, 31,0);
    tracep->declBus(c+366,"ADDR_WIDTH", false,-1, 31,0);
    tracep->declQuad(c+383,"RAM_TYPE", false,-1, 39,0);
    tracep->declBit(c+308,"rd_clk", false,-1);
    tracep->declBit(c+310,"rd_rstn", false,-1);
    tracep->declBit(c+311,"rd_en", false,-1);
    tracep->declBus(c+173,"rd_data", false,-1, 31,0);
    tracep->declBus(c+174,"rd_addr", false,-1, 7,0);
    tracep->declBit(c+308,"wr_clk", false,-1);
    tracep->declBit(c+310,"wr_rstn", false,-1);
    tracep->declBit(c+175,"wr_en", false,-1);
    tracep->declBus(c+167,"wr_data", false,-1, 31,0);
    tracep->declBus(c+176,"wr_addr", false,-1, 7,0);
    tracep->popNamePrefix(1);
    tracep->pushNamePrefix("pipe ");
    tracep->declBus(c+364,"RD_SYNC_DEPTH", false,-1, 31,0);
    tracep->declBus(c+364,"WR_SYNC_DEPTH", false,-1, 31,0);
    tracep->declBus(c+364,"DC_SYNC_DEPTH", false,-1, 31,0);
    tracep->declBus(c+388,"BYTE_WIDTH", false,-1, 31,0);
    tracep->declBus(c+365,"DATA_ZERO", false,-1, 31,0);
    tracep->declBus(c+364,"COUNT_WIDTH", false,-1, 31,0);
    tracep->declBit(c+308,"rd_clk", false,-1);
    tracep->declBit(c+310,"rd_rstn", false,-1);
    tracep->declBit(c+5,"rd_en", false,-1);
    tracep->declBit(c+169,"rd_valid", false,-1);
    tracep->declBus(c+173,"rd_data", false,-1, 31,0);
    tracep->declBit(c+170,"rd_empty", false,-1);
    tracep->declBit(c+5,"r_rd_en", false,-1);
    tracep->declBit(c+169,"r_rd_valid", false,-1);
    tracep->declBus(c+171,"r_rd_data", false,-1, 31,0);
    tracep->declBit(c+170,"r_rd_empty", false,-1);
    tracep->declBit(c+308,"wr_clk", false,-1);
    tracep->declBit(c+310,"wr_rstn", false,-1);
    tracep->declBit(c+83,"wr_en", false,-1);
    tracep->declBit(c+370,"wr_ack", false,-1);
    tracep->declBus(c+167,"wr_data", false,-1, 31,0);
    tracep->declBit(c+168,"wr_full", false,-1);
    tracep->declBit(c+83,"r_wr_en", false,-1);
    tracep->declBit(c+370,"r_wr_ack", false,-1);
    tracep->declBus(c+167,"r_wr_data", false,-1, 31,0);
    tracep->declBit(c+168,"r_wr_full", false,-1);
    tracep->declBit(c+370,"data_count_clk", false,-1);
    tracep->declBit(c+370,"data_count_rstn", false,-1);
    tracep->declBus(c+1,"data_count", false,-1, 0,0);
    tracep->declBus(c+1,"r_data_count", false,-1, 0,0);
    tracep->declBus(c+399,"index", false,-1, 31,0);
    tracep->declBus(c+400,"reg_rd_valid", false,-1, -1,0);
    tracep->declBus(c+401,"reg_rd_empty", false,-1, -1,0);
    for (int i = 0; i < 2; ++i) {
        tracep->declBus(c+402+i*1,"reg_rd_data", true,(i+-1), 31,0);
    }
    tracep->declBus(c+404,"reg_wr_ack", false,-1, -1,0);
    tracep->declBus(c+405,"reg_wr_full", false,-1, -1,0);
    for (int i = 0; i < 2; ++i) {
        tracep->declBus(c+406+i*1,"reg_wr_data", true,(i+-1), 31,0);
    }
    for (int i = 0; i < 2; ++i) {
        tracep->declBus(c+408+i*1,"reg_data_count", true,(i+-1), 0,0);
    }
    tracep->popNamePrefix(3);
    tracep->pushNamePrefix("encoder_fifo ");
    tracep->declBus(c+381,"FIFO_DEPTH", false,-1, 31,0);
    tracep->declBus(c+364,"COUNT_WIDTH", false,-1, 31,0);
    tracep->declBus(c+382,"BUS_WIDTH", false,-1, 31,0);
    tracep->declBus(c+366,"USER_WIDTH", false,-1, 31,0);
    tracep->declBus(c+365,"DEST_WIDTH", false,-1, 31,0);
    tracep->declQuad(c+383,"RAM_TYPE", false,-1, 39,0);
    tracep->declBus(c+364,"PACKET_MODE", false,-1, 31,0);
    tracep->declBus(c+364,"COUNT_DELAY", false,-1, 31,0);
    tracep->declBus(c+364,"COUNT_ENA", false,-1, 31,0);
    tracep->declBit(c+308,"m_axis_aclk", false,-1);
    tracep->declBit(c+310,"m_axis_arstn", false,-1);
    tracep->declBit(c+117,"m_axis_tvalid", false,-1);
    tracep->declBit(c+10,"m_axis_tready", false,-1);
    tracep->declBus(c+116,"m_axis_tdata", false,-1, 15,0);
    tracep->declBus(c+190,"m_axis_tkeep", false,-1, 1,0);
    tracep->declBit(c+191,"m_axis_tlast", false,-1);
    tracep->declBus(c+118,"m_axis_tuser", false,-1, 7,0);
    tracep->declBus(c+192,"m_axis_tdest", false,-1, 0,0);
    tracep->declBit(c+308,"s_axis_aclk", false,-1);
    tracep->declBit(c+310,"s_axis_arstn", false,-1);
    tracep->declBit(c+113,"s_axis_tvalid", false,-1);
    tracep->declBit(c+115,"s_axis_tready", false,-1);
    tracep->declBus(c+112,"s_axis_tdata", false,-1, 15,0);
    tracep->declBus(c+378,"s_axis_tkeep", false,-1, 1,0);
    tracep->declBit(c+370,"s_axis_tlast", false,-1);
    tracep->declBus(c+114,"s_axis_tuser", false,-1, 7,0);
    tracep->declBus(c+370,"s_axis_tdest", false,-1, 0,0);
    tracep->declBit(c+370,"data_count_aclk", false,-1);
    tracep->declBit(c+370,"data_count_arstn", false,-1);
    tracep->declBus(c+3,"data_count", false,-1, 0,0);
    tracep->declBus(c+385,"c_ARRAY_LENGTH", false,-1, 31,0);
    tracep->declBus(c+386,"c_TDATA_OFFSET", false,-1, 31,0);
    tracep->declBus(c+387,"c_TKEEP_OFFSET", false,-1, 31,0);
    tracep->declBus(c+382,"c_TUSER_OFFSET", false,-1, 31,0);
    tracep->declBus(c+365,"c_TDEST_OFFSET", false,-1, 31,0);
    tracep->declBus(c+364,"c_TLAST_OFFSET", false,-1, 31,0);
    tracep->declBus(c+366,"c_PWR_FIFO", false,-1, 31,0);
    tracep->declBus(c+381,"c_FIFO_DEPTH", false,-1, 31,0);
    tracep->declBus(c+388,"c_FIFO_WIDTH", false,-1, 31,0);
    tracep->declBus(c+193,"s_axis_concat_data", false,-1, 31,0);
    tracep->declBit(c+194,"s_wr_full", false,-1);
    tracep->declBit(c+195,"s_rd_valid", false,-1);
    tracep->declBit(c+196,"s_rd_empty", false,-1);
    tracep->declBit(c+10,"s_rd_en", false,-1);
    tracep->declBus(c+197,"s_rd_data", false,-1, 31,0);
    tracep->declBit(c+370,"open", false,-1);
    tracep->pushNamePrefix("axis_control ");
    tracep->declBus(c+382,"BUS_WIDTH", false,-1, 31,0);
    tracep->declBus(c+388,"FIFO_WIDTH", false,-1, 31,0);
    tracep->declBus(c+366,"FIFO_POWER", false,-1, 31,0);
    tracep->declBus(c+366,"USER_WIDTH", false,-1, 31,0);
    tracep->declBus(c+365,"DEST_WIDTH", false,-1, 31,0);
    tracep->declBus(c+364,"PACKET_MODE", false,-1, 31,0);
    tracep->declBit(c+308,"m_axis_aclk", false,-1);
    tracep->declBit(c+310,"m_axis_arstn", false,-1);
    tracep->declBit(c+117,"m_axis_tvalid", false,-1);
    tracep->declBit(c+10,"m_axis_tready", false,-1);
    tracep->declBus(c+116,"m_axis_tdata", false,-1, 15,0);
    tracep->declBus(c+190,"m_axis_tkeep", false,-1, 1,0);
    tracep->declBit(c+191,"m_axis_tlast", false,-1);
    tracep->declBus(c+118,"m_axis_tuser", false,-1, 7,0);
    tracep->declBus(c+192,"m_axis_tdest", false,-1, 0,0);
    tracep->declBit(c+370,"s_axis_tlast", false,-1);
    tracep->declBit(c+10,"rd_en", false,-1);
    tracep->declBit(c+195,"rd_valid", false,-1);
    tracep->declBus(c+197,"rd_data", false,-1, 31,0);
    tracep->declBit(c+196,"rd_empty", false,-1);
    tracep->declBit(c+194,"wr_full", false,-1);
    tracep->declBus(c+385,"c_ARRAY_LENGTH", false,-1, 31,0);
    tracep->declBus(c+386,"c_TDATA_OFFSET", false,-1, 31,0);
    tracep->declBus(c+387,"c_TKEEP_OFFSET", false,-1, 31,0);
    tracep->declBus(c+382,"c_TUSER_OFFSET", false,-1, 31,0);
    tracep->declBus(c+365,"c_TDEST_OFFSET", false,-1, 31,0);
    tracep->declBus(c+364,"c_TLAST_OFFSET", false,-1, 31,0);
    tracep->declBus(c+389,"c_FIFO_SIZE", false,-1, 7,0);
    tracep->declBus(c+410,"s_tlast_count", false,-1, 7,0);
    tracep->declBit(c+411,"r_mclk_s_axis_tlast", false,-1);
    tracep->declBit(c+412,"rr_mclk_s_axis_tlast", false,-1);
    tracep->declBit(c+413,"r_mclk_w_full", false,-1);
    tracep->declBit(c+414,"rr_mclk_w_full", false,-1);
    tracep->declBus(c+116,"s_m_axis_tdata", false,-1, 15,0);
    tracep->declBit(c+117,"s_m_axis_tvalid", false,-1);
    tracep->declBus(c+190,"s_m_axis_tkeep", false,-1, 1,0);
    tracep->declBit(c+191,"s_m_axis_tlast", false,-1);
    tracep->declBus(c+118,"s_m_axis_tuser", false,-1, 7,0);
    tracep->declBus(c+192,"s_m_axis_tdest", false,-1, 0,0);
    tracep->declBit(c+198,"r_rd_valid", false,-1);
    tracep->declBit(c+415,"s_tlast_full", false,-1);
    tracep->popNamePrefix(1);
    tracep->pushNamePrefix("axis_fifo ");
    tracep->declBus(c+381,"FIFO_DEPTH", false,-1, 31,0);
    tracep->declBus(c+388,"BYTE_WIDTH", false,-1, 31,0);
    tracep->declBus(c+364,"COUNT_WIDTH", false,-1, 31,0);
    tracep->declBus(c+365,"FWFT", false,-1, 31,0);
    tracep->declBus(c+364,"RD_SYNC_DEPTH", false,-1, 31,0);
    tracep->declBus(c+364,"WR_SYNC_DEPTH", false,-1, 31,0);
    tracep->declBus(c+364,"DC_SYNC_DEPTH", false,-1, 31,0);
    tracep->declBus(c+364,"COUNT_DELAY", false,-1, 31,0);
    tracep->declBus(c+364,"COUNT_ENA", false,-1, 31,0);
    tracep->declBus(c+365,"DATA_ZERO", false,-1, 31,0);
    tracep->declBus(c+364,"ACK_ENA", false,-1, 31,0);
    tracep->declQuad(c+383,"RAM_TYPE", false,-1, 39,0);
    tracep->declBit(c+308,"rd_clk", false,-1);
    tracep->declBit(c+310,"rd_rstn", false,-1);
    tracep->declBit(c+10,"rd_en", false,-1);
    tracep->declBit(c+195,"rd_valid", false,-1);
    tracep->declBus(c+197,"rd_data", false,-1, 31,0);
    tracep->declBit(c+196,"rd_empty", false,-1);
    tracep->declBit(c+308,"wr_clk", false,-1);
    tracep->declBit(c+310,"wr_rstn", false,-1);
    tracep->declBit(c+113,"wr_en", false,-1);
    tracep->declBit(c+370,"wr_ack", false,-1);
    tracep->declBus(c+193,"wr_data", false,-1, 31,0);
    tracep->declBit(c+194,"wr_full", false,-1);
    tracep->declBit(c+370,"data_count_clk", false,-1);
    tracep->declBit(c+370,"data_count_rstn", false,-1);
    tracep->declBus(c+3,"data_count", false,-1, 0,0);
    tracep->declBus(c+366,"c_PWR_FIFO", false,-1, 31,0);
    tracep->declBus(c+381,"c_FIFO_DEPTH", false,-1, 31,0);
    tracep->declBit(c+195,"s_rd_valid", false,-1);
    tracep->declBus(c+199,"s_rd_data", false,-1, 31,0);
    tracep->declBit(c+196,"s_rd_empty", false,-1);
    tracep->declBit(c+10,"s_rd_en", false,-1);
    tracep->declBit(c+312,"s_rd_mem_en", false,-1);
    tracep->declBus(c+200,"s_rd_addr", false,-1, 7,0);
    tracep->declBit(c+370,"s_wr_ack", false,-1);
    tracep->declBus(c+193,"s_wr_data", false,-1, 31,0);
    tracep->declBit(c+194,"s_wr_full", false,-1);
    tracep->declBit(c+113,"s_wr_en", false,-1);
    tracep->declBit(c+201,"s_wr_mem_en", false,-1);
    tracep->declBus(c+202,"s_wr_addr", false,-1, 7,0);
    tracep->declBus(c+3,"s_data_count", false,-1, 0,0);
    tracep->pushNamePrefix("control ");
    tracep->declBus(c+381,"FIFO_DEPTH", false,-1, 31,0);
    tracep->declBus(c+388,"BYTE_WIDTH", false,-1, 31,0);
    tracep->declBus(c+366,"ADDR_WIDTH", false,-1, 31,0);
    tracep->declBus(c+364,"COUNT_WIDTH", false,-1, 31,0);
    tracep->declBus(c+365,"GREY_CODE", false,-1, 31,0);
    tracep->declBus(c+364,"COUNT_DELAY", false,-1, 31,0);
    tracep->declBus(c+364,"COUNT_ENA", false,-1, 31,0);
    tracep->declBus(c+364,"ACK_ENA", false,-1, 31,0);
    tracep->declBus(c+365,"FWFT", false,-1, 31,0);
    tracep->declBit(c+308,"rd_clk", false,-1);
    tracep->declBit(c+310,"rd_rstn", false,-1);
    tracep->declBit(c+10,"rd_en", false,-1);
    tracep->declBus(c+200,"rd_addr", false,-1, 7,0);
    tracep->declBit(c+195,"rd_valid", false,-1);
    tracep->declBit(c+312,"rd_mem_en", false,-1);
    tracep->declBit(c+196,"rd_empty", false,-1);
    tracep->declBit(c+308,"wr_clk", false,-1);
    tracep->declBit(c+310,"wr_rstn", false,-1);
    tracep->declBit(c+113,"wr_en", false,-1);
    tracep->declBus(c+202,"wr_addr", false,-1, 7,0);
    tracep->declBit(c+370,"wr_ack", false,-1);
    tracep->declBit(c+201,"wr_mem_en", false,-1);
    tracep->declBit(c+194,"wr_full", false,-1);
    tracep->declBit(c+370,"data_count_clk", false,-1);
    tracep->declBit(c+370,"data_count_rstn", false,-1);
    tracep->declBus(c+3,"data_count", false,-1, 0,0);
    tracep->declBus(c+396,"idle", false,-1, 1,0);
    tracep->declBus(c+377,"push", false,-1, 1,0);
    tracep->declBus(c+397,"ready", false,-1, 1,0);
    tracep->declBus(c+203,"read_state", false,-1, 1,0);
    tracep->declBus(c+204,"head", false,-1, 7,0);
    tracep->declBus(c+205,"tail", false,-1, 7,0);
    tracep->declBus(c+206,"r_head", false,-1, 7,0);
    tracep->declBus(c+207,"r_tail", false,-1, 7,0);
    tracep->declBus(c+202,"r_gr_head", false,-1, 7,0);
    tracep->declBus(c+200,"r_gr_tail", false,-1, 7,0);
    tracep->declBus(c+208,"next_head", false,-1, 7,0);
    tracep->declBus(c+209,"next_tail", false,-1, 7,0);
    tracep->declBus(c+398,"r_next_head", false,-1, 7,0);
    tracep->declBus(c+398,"r_next_tail", false,-1, 7,0);
    tracep->declBus(c+210,"rd_head", false,-1, 7,0);
    tracep->declBus(c+211,"wr_tail", false,-1, 7,0);
    tracep->declBus(c+398,"r_dc_head", false,-1, 7,0);
    tracep->declBus(c+398,"r_dc_tail", false,-1, 7,0);
    tracep->declBit(c+370,"r_dc_fwft_count", false,-1);
    tracep->declBit(c+212,"rd_ctrl_mem", false,-1);
    tracep->declBit(c+196,"r_rd_empty", false,-1);
    tracep->declBit(c+213,"r_rd_rstn", false,-1);
    tracep->declBit(c+214,"r_wr_rstn", false,-1);
    tracep->declBus(c+4,"r_data_count", false,-1, 7,0);
    tracep->declBit(c+215,"r_fwft_count", false,-1);
    tracep->popNamePrefix(1);
    tracep->pushNamePrefix("memory ");
    tracep->declBus(c+381,"FIFO_DEPTH", false,-1, 31,0);
    tracep->declBus(c+388,"BYTE_WIDTH", false,-1, 31,0);
    tracep->declBus(c+366,"ADDR_WIDTH", false,-1, 31,0);
    tracep->declQuad(c+383,"RAM_TYPE", false,-1, 39,0);
    tracep->declBit(c+308,"rd_clk", false,-1);
    tracep->declBit(c+310,"rd_rstn", false,-1);
    tracep->declBit(c+312,"rd_en", false,-1);
    tracep->declBus(c+199,"rd_data", false,-1, 31,0);
    tracep->declBus(c+200,"rd_addr", false,-1, 7,0);
    tracep->declBit(c+308,"wr_clk", false,-1);
    tracep->declBit(c+310,"wr_rstn", false,-1);
    tracep->declBit(c+201,"wr_en", false,-1);
    tracep->declBus(c+193,"wr_data", false,-1, 31,0);
    tracep->declBus(c+202,"wr_addr", false,-1, 7,0);
    tracep->popNamePrefix(1);
    tracep->pushNamePrefix("pipe ");
    tracep->declBus(c+364,"RD_SYNC_DEPTH", false,-1, 31,0);
    tracep->declBus(c+364,"WR_SYNC_DEPTH", false,-1, 31,0);
    tracep->declBus(c+364,"DC_SYNC_DEPTH", false,-1, 31,0);
    tracep->declBus(c+388,"BYTE_WIDTH", false,-1, 31,0);
    tracep->declBus(c+365,"DATA_ZERO", false,-1, 31,0);
    tracep->declBus(c+364,"COUNT_WIDTH", false,-1, 31,0);
    tracep->declBit(c+308,"rd_clk", false,-1);
    tracep->declBit(c+310,"rd_rstn", false,-1);
    tracep->declBit(c+10,"rd_en", false,-1);
    tracep->declBit(c+195,"rd_valid", false,-1);
    tracep->declBus(c+199,"rd_data", false,-1, 31,0);
    tracep->declBit(c+196,"rd_empty", false,-1);
    tracep->declBit(c+10,"r_rd_en", false,-1);
    tracep->declBit(c+195,"r_rd_valid", false,-1);
    tracep->declBus(c+197,"r_rd_data", false,-1, 31,0);
    tracep->declBit(c+196,"r_rd_empty", false,-1);
    tracep->declBit(c+308,"wr_clk", false,-1);
    tracep->declBit(c+310,"wr_rstn", false,-1);
    tracep->declBit(c+113,"wr_en", false,-1);
    tracep->declBit(c+370,"wr_ack", false,-1);
    tracep->declBus(c+193,"wr_data", false,-1, 31,0);
    tracep->declBit(c+194,"wr_full", false,-1);
    tracep->declBit(c+113,"r_wr_en", false,-1);
    tracep->declBit(c+370,"r_wr_ack", false,-1);
    tracep->declBus(c+193,"r_wr_data", false,-1, 31,0);
    tracep->declBit(c+194,"r_wr_full", false,-1);
    tracep->declBit(c+370,"data_count_clk", false,-1);
    tracep->declBit(c+370,"data_count_rstn", false,-1);
    tracep->declBus(c+3,"data_count", false,-1, 0,0);
    tracep->declBus(c+3,"r_data_count", false,-1, 0,0);
    tracep->declBus(c+416,"index", false,-1, 31,0);
    tracep->declBus(c+417,"reg_rd_valid", false,-1, -1,0);
    tracep->declBus(c+418,"reg_rd_empty", false,-1, -1,0);
    for (int i = 0; i < 2; ++i) {
        tracep->declBus(c+419+i*1,"reg_rd_data", true,(i+-1), 31,0);
    }
    tracep->declBus(c+421,"reg_wr_ack", false,-1, -1,0);
    tracep->declBus(c+422,"reg_wr_full", false,-1, -1,0);
    for (int i = 0; i < 2; ++i) {
        tracep->declBus(c+423+i*1,"reg_wr_data", true,(i+-1), 31,0);
    }
    for (int i = 0; i < 2; ++i) {
        tracep->declBus(c+425+i*1,"reg_data_count", true,(i+-1), 0,0);
    }
    tracep->popNamePrefix(3);
    tracep->pushNamePrefix("incomming_char_fifo ");
    tracep->declBus(c+388,"depth", false,-1, 31,0);
    tracep->declBus(c+366,"width", false,-1, 31,0);
    tracep->declBit(c+308,"aclk", false,-1);
    tracep->declBit(c+310,"arstn", false,-1);
    tracep->declBus(c+102,"m_axis_tdata", false,-1, 7,0);
    tracep->declBit(c+103,"m_axis_tvalid", false,-1);
    tracep->declBit(c+9,"m_axis_tready", false,-1);
    tracep->declBus(c+100,"s_axis_tdata", false,-1, 7,0);
    tracep->declBit(c+101,"s_axis_tvalid", false,-1);
    tracep->declBit(c+8,"s_axis_tready", false,-1);
    tracep->declBus(c+216,"index", false,-1, 2,0);
    tracep->declBus(c+217,"index_shift", false,-1, 2,0);
    tracep->declBus(c+218,"index_check", false,-1, 2,0);
    for (int i = 0; i < 4; ++i) {
        tracep->declBus(c+219+i*1,"reg_data_buffer", true,(i+0), 7,0);
    }
    tracep->declBus(c+223,"reg_valid_buffer", false,-1, 3,0);
    tracep->popNamePrefix(1);
    tracep->pushNamePrefix("mil1553_decoder ");
    tracep->declBus(c+315,"clock_speed", false,-1, 31,0);
    tracep->declBus(c+367,"sample_rate", false,-1, 31,0);
    tracep->declBus(c+364,"bit_slice_offset", false,-1, 31,0);
    tracep->declBus(c+364,"invert_data", false,-1, 31,0);
    tracep->declBus(c+364,"sample_select", false,-1, 31,0);
    tracep->declBit(c+308,"aclk", false,-1);
    tracep->declBit(c+310,"arstn", false,-1);
    tracep->declBus(c+82,"m_axis_tdata", false,-1, 15,0);
    tracep->declBit(c+83,"m_axis_tvalid", false,-1);
    tracep->declBus(c+84,"m_axis_tuser", false,-1, 7,0);
    tracep->declBit(c+85,"m_axis_tready", false,-1);
    tracep->declBus(c+11,"diff", false,-1, 1,0);
    tracep->declBus(c+427,"base_1553_clock_rate", false,-1, 31,0);
    tracep->declBus(c+428,"samples_per_mhz", false,-1, 31,0);
    tracep->declBus(c+317,"cycles_per_mhz", false,-1, 31,0);
    tracep->declBus(c+429,"delay_time", false,-1, 31,0);
    tracep->declBus(c+430,"samples_to_skip", false,-1, 31,0);
    tracep->declBus(c+431,"round_sample_select", false,-1, 31,0);
    tracep->declBus(c+428,"bit_rate_per_mhz", false,-1, 31,0);
    tracep->declBus(c+432,"round_bit_slice_offset", false,-1, 31,0);
    tracep->declBus(c+433,"sync_pulse_len", false,-1, 31,0);
    tracep->declBus(c+434,"bits_per_trans", false,-1, 31,0);
    tracep->declBus(c+435,"synth_bits_per_trans", false,-1, 31,0);
    tracep->declBus(c+436,"diff_wait", false,-1, 4,0);
    tracep->declBus(c+437,"data_cap", false,-1, 4,0);
    tracep->declBus(c+438,"data_reduce", false,-1, 4,0);
    tracep->declBus(c+439,"parity_gen", false,-1, 4,0);
    tracep->declBus(c+440,"trans", false,-1, 4,0);
    tracep->declBus(c+441,"error", false,-1, 4,0);
    tracep->declBus(c+442,"sync_cmd_stat", false,-1, 5,0);
    tracep->declBus(c+443,"sync_data", false,-1, 5,0);
    tracep->declBus(c+374,"cmd_data", false,-1, 2,0);
    tracep->declBus(c+376,"cmd_cmnd", false,-1, 2,0);
    tracep->declBus(c+397,"bit_pattern", false,-1, 1,0);
    tracep->declQuad(c+444,"synth_clk", false,-1, 39,0);
    tracep->declBus(c+224,"bit_slice_index", false,-1, 31,0);
    tracep->declQuad(c+225,"reg_data", false,-1, 39,0);
    tracep->declBit(c+227,"parity_bit", false,-1);
    tracep->declBit(c+228,"delay_bit", false,-1);
    tracep->declBus(c+229,"state", false,-1, 4,0);
    tracep->declBus(c+230,"data", false,-1, 15,0);
    tracep->declBus(c+231,"cmd", false,-1, 7,0);
    tracep->declBus(c+232,"p_diff", false,-1, 1,0);
    tracep->declBus(c+233,"skip_counter", false,-1, 5,0);
    tracep->declBus(c+234,"pause_counter", false,-1, 7,0);
    tracep->declBus(c+235,"trans_counter", false,-1, 5,0);
    tracep->popNamePrefix(1);
    tracep->pushNamePrefix("mil1553_encoder ");
    tracep->declBus(c+315,"clock_speed", false,-1, 31,0);
    tracep->declBus(c+367,"sample_rate", false,-1, 31,0);
    tracep->declBit(c+308,"aclk", false,-1);
    tracep->declBit(c+310,"arstn", false,-1);
    tracep->declBus(c+116,"s_axis_tdata", false,-1, 15,0);
    tracep->declBit(c+117,"s_axis_tvalid", false,-1);
    tracep->declBus(c+118,"s_axis_tuser", false,-1, 7,0);
    tracep->declBit(c+10,"s_axis_tready", false,-1);
    tracep->declBus(c+12,"diff", false,-1, 1,0);
    tracep->declBit(c+13,"en_diff", false,-1);
    tracep->declBus(c+427,"base_1553_clock_rate", false,-1, 31,0);
    tracep->declBus(c+428,"samples_per_mhz", false,-1, 31,0);
    tracep->declBus(c+317,"cycles_per_mhz", false,-1, 31,0);
    tracep->declBus(c+446,"samples_to_skip", false,-1, 31,0);
    tracep->declBus(c+428,"bit_rate_per_mhz", false,-1, 31,0);
    tracep->declBus(c+429,"delay_time", false,-1, 31,0);
    tracep->declBus(c+433,"sync_pulse_len", false,-1, 31,0);
    tracep->declBus(c+434,"bits_per_trans", false,-1, 31,0);
    tracep->declBus(c+435,"synth_bits_per_trans", false,-1, 31,0);
    tracep->declBus(c+397,"bit_pattern", false,-1, 1,0);
    tracep->declQuad(c+444,"synth_clk", false,-1, 39,0);
    tracep->declBus(c+373,"data_cap", false,-1, 2,0);
    tracep->declBus(c+374,"data_invert", false,-1, 2,0);
    tracep->declBus(c+375,"parity_gen", false,-1, 2,0);
    tracep->declBus(c+388,"process_data", false,-1, 31,0);
    tracep->declBus(c+447,"pause_ck", false,-1, 2,0);
    tracep->declBus(c+448,"trans", false,-1, 2,0);
    tracep->declBus(c+379,"error", false,-1, 2,0);
    tracep->declBus(c+442,"sync_cmd_stat", false,-1, 5,0);
    tracep->declBus(c+443,"sync_data", false,-1, 5,0);
    tracep->declBus(c+374,"cmd_data", false,-1, 2,0);
    tracep->declBus(c+376,"cmd_cmnd", false,-1, 2,0);
    tracep->declBus(c+449,"enable_diff_output", false,-1, 0,0);
    tracep->declBus(c+236,"xor_index", false,-1, 31,0);
    tracep->declBus(c+237,"cycle_index", false,-1, 31,0);
    tracep->declQuad(c+238,"reg_data", false,-1, 39,0);
    tracep->declBit(c+240,"parity_bit", false,-1);
    tracep->declBus(c+241,"state", false,-1, 2,0);
    tracep->declBus(c+242,"data", false,-1, 15,0);
    tracep->declBus(c+243,"r_data", false,-1, 15,0);
    tracep->declBus(c+244,"cmd", false,-1, 7,0);
    tracep->declBus(c+245,"skip_counter", false,-1, 5,0);
    tracep->declBus(c+246,"pause_counter", false,-1, 7,0);
    tracep->declBus(c+247,"trans_counter", false,-1, 5,0);
    tracep->declBus(c+248,"prev_trans_counter", false,-1, 5,0);
    tracep->popNamePrefix(1);
    tracep->pushNamePrefix("outgoing_char_fifo ");
    tracep->declBus(c+388,"depth", false,-1, 31,0);
    tracep->declBus(c+366,"width", false,-1, 31,0);
    tracep->declBit(c+308,"aclk", false,-1);
    tracep->declBit(c+310,"arstn", false,-1);
    tracep->declBus(c+98,"m_axis_tdata", false,-1, 7,0);
    tracep->declBit(c+99,"m_axis_tvalid", false,-1);
    tracep->declBit(c+7,"m_axis_tready", false,-1);
    tracep->declBus(c+96,"s_axis_tdata", false,-1, 7,0);
    tracep->declBit(c+97,"s_axis_tvalid", false,-1);
    tracep->declBit(c+6,"s_axis_tready", false,-1);
    tracep->declBus(c+249,"index", false,-1, 2,0);
    tracep->declBus(c+250,"index_shift", false,-1, 2,0);
    tracep->declBus(c+251,"index_check", false,-1, 2,0);
    for (int i = 0; i < 4; ++i) {
        tracep->declBus(c+252+i*1,"reg_data_buffer", true,(i+0), 7,0);
    }
    tracep->declBus(c+256,"reg_valid_buffer", false,-1, 3,0);
    tracep->popNamePrefix(1);
    tracep->pushNamePrefix("string_decoder ");
    tracep->declBus(c+364,"byte_swap", false,-1, 31,0);
    tracep->declBit(c+308,"aclk", false,-1);
    tracep->declBit(c+310,"arstn", false,-1);
    tracep->declArray(c+104,"s_axis_tdata", false,-1, 167,0);
    tracep->declBit(c+110,"s_axis_tvalid", false,-1);
    tracep->declBus(c+450,"s_axis_tkeep", false,-1, 20,0);
    tracep->declBit(c+451,"s_axis_tlast", false,-1);
    tracep->declBit(c+111,"s_axis_tready", false,-1);
    tracep->declBus(c+112,"m_axis_tdata", false,-1, 15,0);
    tracep->declBit(c+113,"m_axis_tvalid", false,-1);
    tracep->declBus(c+114,"m_axis_tuser", false,-1, 7,0);
    tracep->declBit(c+115,"m_axis_tready", false,-1);
    tracep->declBit(c+257,"p_m_axis_tready", false,-1);
    tracep->declBit(c+258,"force_s_axis_tready", false,-1);
    tracep->declArray(c+104,"w_s_axis_tdata", false,-1, 167,0);
    tracep->popNamePrefix(1);
    tracep->pushNamePrefix("string_encoder ");
    tracep->declBus(c+364,"byte_swap", false,-1, 31,0);
    tracep->declBit(c+308,"aclk", false,-1);
    tracep->declBit(c+310,"arstn", false,-1);
    tracep->declBus(c+86,"s_axis_tdata", false,-1, 15,0);
    tracep->declBit(c+87,"s_axis_tvalid", false,-1);
    tracep->declBus(c+88,"s_axis_tuser", false,-1, 7,0);
    tracep->declBit(c+5,"s_axis_tready", false,-1);
    tracep->declArray(c+89,"m_axis_tdata", false,-1, 167,0);
    tracep->declBit(c+95,"m_axis_tvalid", false,-1);
    tracep->declBit(c+259,"m_axis_tlast", false,-1);
    tracep->declBus(c+260,"m_axis_tkeep", false,-1, 20,0);
    tracep->declBit(c+5,"m_axis_tready", false,-1);
    tracep->declBit(c+261,"p_m_axis_tready", false,-1);
    tracep->declArray(c+89,"r_m_axis_tdata", false,-1, 167,0);
    tracep->popNamePrefix(1);
    tracep->pushNamePrefix("string_to_char ");
    tracep->declBus(c+380,"slave_width", false,-1, 31,0);
    tracep->declBus(c+365,"master_width", false,-1, 31,0);
    tracep->declBit(c+308,"aclk", false,-1);
    tracep->declBit(c+310,"arstn", false,-1);
    tracep->declBus(c+96,"m_axis_tdata", false,-1, 7,0);
    tracep->declBit(c+97,"m_axis_tvalid", false,-1);
    tracep->declBit(c+6,"m_axis_tready", false,-1);
    tracep->declArray(c+89,"s_axis_tdata", false,-1, 167,0);
    tracep->declBit(c+95,"s_axis_tvalid", false,-1);
    tracep->declBit(c+5,"s_axis_tready", false,-1);
    tracep->pushNamePrefix("genblk1 ");
    for (int i = 0; i < 21; ++i) {
        tracep->declBus(c+262+i*1,"reg_data_buffer", true,(i+0), 7,0);
    }
    tracep->declBit(c+97,"reg_data_valid", false,-1);
    tracep->declBus(c+283,"reg_m_axis_tdata", false,-1, 7,0);
    tracep->declBus(c+284,"counter", false,-1, 5,0);
    tracep->declBus(c+285,"index", false,-1, 5,0);
    for (int i = 0; i < 21; ++i) {
        tracep->declBus(c+286+i*1,"split_s_axis_tdata", true,(i+0), 7,0);
    }
    tracep->declBit(c+307,"p_m_axis_tready", false,-1);
    tracep->popNamePrefix(4);
}

VL_ATTR_COLD void Vtb_core___024root__trace_init_top(Vtb_core___024root* vlSelf, VerilatedVcd* tracep) {
    if (false && vlSelf) {}  // Prevent unused
    Vtb_core__Syms* const __restrict vlSymsp VL_ATTR_UNUSED = vlSelf->vlSymsp;
    VL_DEBUG_IF(VL_DBG_MSGF("+    Vtb_core___024root__trace_init_top\n"); );
    // Body
    Vtb_core___024root__trace_init_sub__TOP__0(vlSelf, tracep);
}

VL_ATTR_COLD void Vtb_core___024root__trace_full_top_0(void* voidSelf, VerilatedVcd::Buffer* bufp);
void Vtb_core___024root__trace_chg_top_0(void* voidSelf, VerilatedVcd::Buffer* bufp);
void Vtb_core___024root__trace_cleanup(void* voidSelf, VerilatedVcd* /*unused*/);

VL_ATTR_COLD void Vtb_core___024root__trace_register(Vtb_core___024root* vlSelf, VerilatedVcd* tracep) {
    if (false && vlSelf) {}  // Prevent unused
    Vtb_core__Syms* const __restrict vlSymsp VL_ATTR_UNUSED = vlSelf->vlSymsp;
    VL_DEBUG_IF(VL_DBG_MSGF("+    Vtb_core___024root__trace_register\n"); );
    // Body
    tracep->addFullCb(&Vtb_core___024root__trace_full_top_0, vlSelf);
    tracep->addChgCb(&Vtb_core___024root__trace_chg_top_0, vlSelf);
    tracep->addCleanupCb(&Vtb_core___024root__trace_cleanup, vlSelf);
}

VL_ATTR_COLD void Vtb_core___024root__trace_full_sub_0(Vtb_core___024root* vlSelf, VerilatedVcd::Buffer* bufp);

VL_ATTR_COLD void Vtb_core___024root__trace_full_top_0(void* voidSelf, VerilatedVcd::Buffer* bufp) {
    VL_DEBUG_IF(VL_DBG_MSGF("+    Vtb_core___024root__trace_full_top_0\n"); );
    // Init
    Vtb_core___024root* const __restrict vlSelf VL_ATTR_UNUSED = static_cast<Vtb_core___024root*>(voidSelf);
    Vtb_core__Syms* const __restrict vlSymsp VL_ATTR_UNUSED = vlSelf->vlSymsp;
    // Body
    Vtb_core___024root__trace_full_sub_0((&vlSymsp->TOP), bufp);
}

extern const VlWide<32>/*1023:0*/ Vtb_core__ConstPool__CONST_h98c30281_0;

VL_ATTR_COLD void Vtb_core___024root__trace_full_sub_0(Vtb_core___024root* vlSelf, VerilatedVcd::Buffer* bufp) {
    if (false && vlSelf) {}  // Prevent unused
    Vtb_core__Syms* const __restrict vlSymsp VL_ATTR_UNUSED = vlSelf->vlSymsp;
    VL_DEBUG_IF(VL_DBG_MSGF("+    Vtb_core___024root__trace_full_sub_0\n"); );
    // Init
    uint32_t* const oldp VL_ATTR_UNUSED = bufp->oldp(vlSymsp->__Vm_baseCode);
    VlWide<5>/*159:0*/ __Vtemp_h398d963f__0;
    VlWide<5>/*159:0*/ __Vtemp_h80bccfe2__0;
    // Body
    bufp->fullBit(oldp+1,((1U & (IData)(vlSelf->tb_core__DOT__dut__DOT__decoder_fifo__DOT__axis_fifo__DOT__control__DOT__r_data_count))));
    bufp->fullCData(oldp+2,(vlSelf->tb_core__DOT__dut__DOT__decoder_fifo__DOT__axis_fifo__DOT__control__DOT__r_data_count),8);
    bufp->fullBit(oldp+3,((1U & (IData)(vlSelf->tb_core__DOT__dut__DOT__encoder_fifo__DOT__axis_fifo__DOT__control__DOT__r_data_count))));
    bufp->fullCData(oldp+4,(vlSelf->tb_core__DOT__dut__DOT__encoder_fifo__DOT__axis_fifo__DOT__control__DOT__r_data_count),8);
    bufp->fullBit(oldp+5,(vlSelf->tb_core__DOT__dut__DOT__mfifo_decoder_ready));
    bufp->fullBit(oldp+6,(vlSelf->tb_core__DOT__dut__DOT__mstring_to_char_ready));
    bufp->fullBit(oldp+7,(vlSelf->tb_core__DOT__dut__DOT__mout_char_fifo_ready));
    bufp->fullBit(oldp+8,(vlSelf->tb_core__DOT__dut__DOT__muart_char_ready));
    bufp->fullBit(oldp+9,(vlSelf->tb_core__DOT__dut__DOT__min_char_fifo_ready));
    bufp->fullBit(oldp+10,(vlSelf->tb_core__DOT__dut__DOT__mfifo_encoder_ready));
    bufp->fullCData(oldp+11,(vlSelf->tb_core__DOT__tb_din),2);
    bufp->fullCData(oldp+12,(vlSelf->tb_core__DOT__dut__DOT__tx_1553),2);
    bufp->fullBit(oldp+13,(vlSelf->tb_core__DOT__tb_en_dout));
    bufp->fullBit(oldp+14,(vlSelf->tb_core__DOT__dut__DOT__axis_uart__DOT__uart_tx__DOT__reg_txd));
    bufp->fullWData(oldp+15,(vlSelf->tb_core__DOT__data_expand),800);
    bufp->fullSData(oldp+40,(vlSelf->tb_core__DOT__data),16);
    bufp->fullWData(oldp+41,(vlSelf->tb_core__DOT__reg_data),1000);
    bufp->fullBit(oldp+73,(vlSelf->tb_core__DOT__parity_gen));
    bufp->fullIData(oldp+74,(vlSelf->tb_core__DOT__xor_index),32);
    bufp->fullIData(oldp+75,(vlSelf->tb_core__DOT__cycle_index),32);
    bufp->fullIData(oldp+76,(vlSelf->tb_core__DOT__pos_counter),32);
    bufp->fullIData(oldp+77,(vlSelf->tb_core__DOT__delay_counter),32);
    bufp->fullBit(oldp+78,((1U & (IData)(vlSelf->tb_core__DOT__tb_din))));
    bufp->fullBit(oldp+79,((1U & ((IData)(vlSelf->tb_core__DOT__tb_din) 
                                  >> 1U))));
    bufp->fullBit(oldp+80,((1U & (IData)(vlSelf->tb_core__DOT__dut__DOT__tx_1553))));
    bufp->fullBit(oldp+81,((1U & ((IData)(vlSelf->tb_core__DOT__dut__DOT__tx_1553) 
                                  >> 1U))));
    bufp->fullSData(oldp+82,(vlSelf->tb_core__DOT__dut__DOT__m1553_decoder_data),16);
    bufp->fullBit(oldp+83,(vlSelf->tb_core__DOT__dut__DOT__m1553_decoder_valid));
    bufp->fullCData(oldp+84,(vlSelf->tb_core__DOT__dut__DOT__m1553_decoder_user),8);
    bufp->fullBit(oldp+85,((1U & (~ (IData)(vlSelf->tb_core__DOT__dut__DOT__decoder_fifo__DOT__axis_fifo__DOT__s_wr_full)))));
    bufp->fullSData(oldp+86,(vlSelf->tb_core__DOT__dut__DOT__mfifo_decoder_data),16);
    bufp->fullBit(oldp+87,(vlSelf->tb_core__DOT__dut__DOT__mfifo_decoder_valid));
    bufp->fullCData(oldp+88,(vlSelf->tb_core__DOT__dut__DOT__mfifo_decoder_user),8);
    bufp->fullWData(oldp+89,(vlSelf->tb_core__DOT__dut__DOT__string_encoder__DOT__r_m_axis_tdata),168);
    bufp->fullBit(oldp+95,(vlSelf->tb_core__DOT__dut__DOT__mstring_encoder_valid));
    bufp->fullCData(oldp+96,(((IData)(vlSelf->tb_core__DOT__dut__DOT__string_to_char__DOT__genblk1__DOT__reg_data_valid)
                               ? ((0x14U >= (0x1fU 
                                             & (IData)(vlSelf->tb_core__DOT__dut__DOT__string_to_char__DOT__genblk1__DOT__counter)))
                                   ? vlSelf->tb_core__DOT__dut__DOT__string_to_char__DOT__genblk1__DOT__reg_data_buffer
                                  [(0x1fU & (IData)(vlSelf->tb_core__DOT__dut__DOT__string_to_char__DOT__genblk1__DOT__counter))]
                                   : 0U) : 0U)),8);
    bufp->fullBit(oldp+97,(vlSelf->tb_core__DOT__dut__DOT__string_to_char__DOT__genblk1__DOT__reg_data_valid));
    bufp->fullCData(oldp+98,(vlSelf->tb_core__DOT__dut__DOT__outgoing_char_fifo__DOT__reg_data_buffer
                             [0U]),8);
    bufp->fullBit(oldp+99,((1U & (IData)(vlSelf->tb_core__DOT__dut__DOT__outgoing_char_fifo__DOT__reg_valid_buffer))));
    bufp->fullCData(oldp+100,(vlSelf->tb_core__DOT__dut__DOT__muart_char_data),8);
    bufp->fullBit(oldp+101,(vlSelf->tb_core__DOT__dut__DOT__muart_char_valid));
    bufp->fullCData(oldp+102,(vlSelf->tb_core__DOT__dut__DOT__incomming_char_fifo__DOT__reg_data_buffer
                              [0U]),8);
    bufp->fullBit(oldp+103,((1U & (IData)(vlSelf->tb_core__DOT__dut__DOT__incomming_char_fifo__DOT__reg_valid_buffer))));
    bufp->fullWData(oldp+104,(vlSelf->tb_core__DOT__dut__DOT__mchar_to_string_data),168);
    bufp->fullBit(oldp+110,(vlSelf->tb_core__DOT__dut__DOT__char_to_string__DOT__reg_data_valid));
    bufp->fullBit(oldp+111,(vlSelf->tb_core__DOT__dut__DOT__mchar_to_string_ready));
    bufp->fullSData(oldp+112,(vlSelf->tb_core__DOT__dut__DOT__mstring_decoder_data),16);
    bufp->fullBit(oldp+113,(vlSelf->tb_core__DOT__dut__DOT__mstring_decoder_valid));
    bufp->fullCData(oldp+114,(vlSelf->tb_core__DOT__dut__DOT__mstring_decoder_user),8);
    bufp->fullBit(oldp+115,((1U & (~ (IData)(vlSelf->tb_core__DOT__dut__DOT__encoder_fifo__DOT__axis_fifo__DOT__s_wr_full)))));
    bufp->fullSData(oldp+116,(((IData)(vlSelf->tb_core__DOT__dut__DOT__mfifo_encoder_valid)
                                ? ((IData)(vlSelf->tb_core__DOT__dut__DOT__encoder_fifo__DOT__axis_fifo__DOT__s_rd_valid)
                                    ? (0xffffU & (vlSelf->tb_core__DOT__dut__DOT__encoder_fifo__DOT__axis_fifo__DOT__s_rd_data 
                                                  >> 0xcU))
                                    : 0U) : 0U)),16);
    bufp->fullBit(oldp+117,(vlSelf->tb_core__DOT__dut__DOT__mfifo_encoder_valid));
    bufp->fullCData(oldp+118,(((IData)(vlSelf->tb_core__DOT__dut__DOT__mfifo_encoder_valid)
                                ? ((IData)(vlSelf->tb_core__DOT__dut__DOT__encoder_fifo__DOT__axis_fifo__DOT__s_rd_valid)
                                    ? (0xffU & (vlSelf->tb_core__DOT__dut__DOT__encoder_fifo__DOT__axis_fifo__DOT__s_rd_data 
                                                >> 2U))
                                    : 0U) : 0U)),8);
    bufp->fullBit(oldp+119,(vlSelf->tb_core__DOT__dut__DOT__axis_uart__DOT__uart_baud_gen_tx__DOT__r_uart_ena));
    bufp->fullBit(oldp+120,(vlSelf->tb_core__DOT__dut__DOT__axis_uart__DOT__uart_baud_gen_rx__DOT__r_uart_ena));
    bufp->fullBit(oldp+121,(vlSelf->tb_core__DOT__dut__DOT__axis_uart__DOT__uart_hold_rx));
    bufp->fullIData(oldp+122,(vlSelf->tb_core__DOT__dut__DOT__axis_uart__DOT__uart_baud_gen_rx__DOT__counter),27);
    bufp->fullIData(oldp+123,(vlSelf->tb_core__DOT__dut__DOT__axis_uart__DOT__uart_baud_gen_tx__DOT__counter),27);
    bufp->fullSData(oldp+124,(vlSelf->tb_core__DOT__dut__DOT__axis_uart__DOT__uart_rx__DOT__reg_data),10);
    bufp->fullBit(oldp+125,(vlSelf->tb_core__DOT__dut__DOT__axis_uart__DOT__uart_rx__DOT__parity_bit));
    bufp->fullCData(oldp+126,(vlSelf->tb_core__DOT__dut__DOT__axis_uart__DOT__uart_rx__DOT__state),3);
    bufp->fullCData(oldp+127,(vlSelf->tb_core__DOT__dut__DOT__axis_uart__DOT__uart_rx__DOT__uart_state),2);
    bufp->fullCData(oldp+128,(vlSelf->tb_core__DOT__dut__DOT__axis_uart__DOT__uart_rx__DOT__data),8);
    bufp->fullCData(oldp+129,(vlSelf->tb_core__DOT__dut__DOT__axis_uart__DOT__uart_rx__DOT__trans_counter),4);
    bufp->fullCData(oldp+130,(vlSelf->tb_core__DOT__dut__DOT__axis_uart__DOT__uart_rx__DOT__prev_trans_counter),4);
    bufp->fullBit(oldp+131,(vlSelf->tb_core__DOT__dut__DOT__axis_uart__DOT__uart_rx__DOT__p_rxd));
    bufp->fullBit(oldp+132,(vlSelf->tb_core__DOT__dut__DOT__axis_uart__DOT__uart_rx__DOT__trans_fin));
    bufp->fullSData(oldp+133,(vlSelf->tb_core__DOT__dut__DOT__axis_uart__DOT__uart_tx__DOT__reg_data),10);
    bufp->fullBit(oldp+134,(vlSelf->tb_core__DOT__dut__DOT__axis_uart__DOT__uart_tx__DOT__parity_bit));
    bufp->fullCData(oldp+135,(vlSelf->tb_core__DOT__dut__DOT__axis_uart__DOT__uart_tx__DOT__state),3);
    bufp->fullCData(oldp+136,(vlSelf->tb_core__DOT__dut__DOT__axis_uart__DOT__uart_tx__DOT__data),8);
    bufp->fullCData(oldp+137,(vlSelf->tb_core__DOT__dut__DOT__axis_uart__DOT__uart_tx__DOT__trans_counter),4);
    bufp->fullCData(oldp+138,(vlSelf->tb_core__DOT__dut__DOT__axis_uart__DOT__uart_tx__DOT__prev_trans_counter),4);
    bufp->fullBit(oldp+139,(vlSelf->tb_core__DOT__dut__DOT__axis_uart__DOT__uart_tx__DOT__trans_fin));
    bufp->fullCData(oldp+140,(vlSelf->tb_core__DOT__dut__DOT__char_to_string__DOT__reg_data_buffer[0]),8);
    bufp->fullCData(oldp+141,(vlSelf->tb_core__DOT__dut__DOT__char_to_string__DOT__reg_data_buffer[1]),8);
    bufp->fullCData(oldp+142,(vlSelf->tb_core__DOT__dut__DOT__char_to_string__DOT__reg_data_buffer[2]),8);
    bufp->fullCData(oldp+143,(vlSelf->tb_core__DOT__dut__DOT__char_to_string__DOT__reg_data_buffer[3]),8);
    bufp->fullCData(oldp+144,(vlSelf->tb_core__DOT__dut__DOT__char_to_string__DOT__reg_data_buffer[4]),8);
    bufp->fullCData(oldp+145,(vlSelf->tb_core__DOT__dut__DOT__char_to_string__DOT__reg_data_buffer[5]),8);
    bufp->fullCData(oldp+146,(vlSelf->tb_core__DOT__dut__DOT__char_to_string__DOT__reg_data_buffer[6]),8);
    bufp->fullCData(oldp+147,(vlSelf->tb_core__DOT__dut__DOT__char_to_string__DOT__reg_data_buffer[7]),8);
    bufp->fullCData(oldp+148,(vlSelf->tb_core__DOT__dut__DOT__char_to_string__DOT__reg_data_buffer[8]),8);
    bufp->fullCData(oldp+149,(vlSelf->tb_core__DOT__dut__DOT__char_to_string__DOT__reg_data_buffer[9]),8);
    bufp->fullCData(oldp+150,(vlSelf->tb_core__DOT__dut__DOT__char_to_string__DOT__reg_data_buffer[10]),8);
    bufp->fullCData(oldp+151,(vlSelf->tb_core__DOT__dut__DOT__char_to_string__DOT__reg_data_buffer[11]),8);
    bufp->fullCData(oldp+152,(vlSelf->tb_core__DOT__dut__DOT__char_to_string__DOT__reg_data_buffer[12]),8);
    bufp->fullCData(oldp+153,(vlSelf->tb_core__DOT__dut__DOT__char_to_string__DOT__reg_data_buffer[13]),8);
    bufp->fullCData(oldp+154,(vlSelf->tb_core__DOT__dut__DOT__char_to_string__DOT__reg_data_buffer[14]),8);
    bufp->fullCData(oldp+155,(vlSelf->tb_core__DOT__dut__DOT__char_to_string__DOT__reg_data_buffer[15]),8);
    bufp->fullCData(oldp+156,(vlSelf->tb_core__DOT__dut__DOT__char_to_string__DOT__reg_data_buffer[16]),8);
    bufp->fullCData(oldp+157,(vlSelf->tb_core__DOT__dut__DOT__char_to_string__DOT__reg_data_buffer[17]),8);
    bufp->fullCData(oldp+158,(vlSelf->tb_core__DOT__dut__DOT__char_to_string__DOT__reg_data_buffer[18]),8);
    bufp->fullCData(oldp+159,(vlSelf->tb_core__DOT__dut__DOT__char_to_string__DOT__reg_data_buffer[19]),8);
    bufp->fullCData(oldp+160,(vlSelf->tb_core__DOT__dut__DOT__char_to_string__DOT__reg_data_buffer[20]),8);
    bufp->fullCData(oldp+161,(vlSelf->tb_core__DOT__dut__DOT__char_to_string__DOT__counter),6);
    bufp->fullCData(oldp+162,(vlSelf->tb_core__DOT__dut__DOT__char_to_string__DOT__index),6);
    bufp->fullBit(oldp+163,(vlSelf->tb_core__DOT__dut__DOT__char_to_string__DOT__p_m_axis_tready));
    bufp->fullCData(oldp+164,(((IData)(vlSelf->tb_core__DOT__dut__DOT__mfifo_decoder_valid)
                                ? ((IData)(vlSelf->tb_core__DOT__dut__DOT__decoder_fifo__DOT__axis_fifo__DOT__s_rd_valid)
                                    ? (3U & (vlSelf->tb_core__DOT__dut__DOT__decoder_fifo__DOT__axis_fifo__DOT__s_rd_data 
                                             >> 0xaU))
                                    : 0U) : 0U)),2);
    bufp->fullBit(oldp+165,(((IData)(vlSelf->tb_core__DOT__dut__DOT__mfifo_decoder_valid) 
                             & ((IData)(vlSelf->tb_core__DOT__dut__DOT__decoder_fifo__DOT__axis_fifo__DOT__s_rd_valid) 
                                & vlSelf->tb_core__DOT__dut__DOT__decoder_fifo__DOT__axis_fifo__DOT__s_rd_data))));
    bufp->fullBit(oldp+166,(((IData)(vlSelf->tb_core__DOT__dut__DOT__mfifo_decoder_valid) 
                             & ((IData)(vlSelf->tb_core__DOT__dut__DOT__decoder_fifo__DOT__axis_fifo__DOT__s_rd_valid) 
                                & (vlSelf->tb_core__DOT__dut__DOT__decoder_fifo__DOT__axis_fifo__DOT__s_rd_data 
                                   >> 1U)))));
    bufp->fullIData(oldp+167,((0xc00U | (((IData)(vlSelf->tb_core__DOT__dut__DOT__m1553_decoder_data) 
                                          << 0xcU) 
                                         | ((IData)(vlSelf->tb_core__DOT__dut__DOT__m1553_decoder_user) 
                                            << 2U)))),32);
    bufp->fullBit(oldp+168,(vlSelf->tb_core__DOT__dut__DOT__decoder_fifo__DOT__axis_fifo__DOT__s_wr_full));
    bufp->fullBit(oldp+169,(vlSelf->tb_core__DOT__dut__DOT__decoder_fifo__DOT__axis_fifo__DOT__s_rd_valid));
    bufp->fullBit(oldp+170,(vlSelf->tb_core__DOT__dut__DOT__decoder_fifo__DOT__axis_fifo__DOT__control__DOT__r_rd_empty));
    bufp->fullIData(oldp+171,(((IData)(vlSelf->tb_core__DOT__dut__DOT__decoder_fifo__DOT__axis_fifo__DOT__s_rd_valid)
                                ? vlSelf->tb_core__DOT__dut__DOT__decoder_fifo__DOT__axis_fifo__DOT__s_rd_data
                                : 0U)),32);
    bufp->fullBit(oldp+172,(vlSelf->tb_core__DOT__dut__DOT__decoder_fifo__DOT__axis_control__DOT__r_rd_valid));
    bufp->fullIData(oldp+173,(vlSelf->tb_core__DOT__dut__DOT__decoder_fifo__DOT__axis_fifo__DOT__s_rd_data),32);
    bufp->fullCData(oldp+174,(vlSelf->tb_core__DOT__dut__DOT__decoder_fifo__DOT__axis_fifo__DOT__control__DOT__r_gr_tail),8);
    bufp->fullBit(oldp+175,(((~ (IData)(vlSelf->tb_core__DOT__dut__DOT__decoder_fifo__DOT__axis_fifo__DOT__s_wr_full)) 
                             & ((IData)(vlSelf->tb_core__DOT__dut__DOT__m1553_decoder_valid) 
                                & (IData)(vlSelf->tb_core__DOT__dut__DOT__decoder_fifo__DOT__axis_fifo__DOT__control__DOT__r_wr_rstn)))));
    bufp->fullCData(oldp+176,(vlSelf->tb_core__DOT__dut__DOT__decoder_fifo__DOT__axis_fifo__DOT__control__DOT__r_gr_head),8);
    bufp->fullCData(oldp+177,(vlSelf->tb_core__DOT__dut__DOT__decoder_fifo__DOT__axis_fifo__DOT__control__DOT__read_state),2);
    bufp->fullCData(oldp+178,(vlSelf->tb_core__DOT__dut__DOT__decoder_fifo__DOT__axis_fifo__DOT__control__DOT__head),8);
    bufp->fullCData(oldp+179,(vlSelf->tb_core__DOT__dut__DOT__decoder_fifo__DOT__axis_fifo__DOT__control__DOT__tail),8);
    bufp->fullCData(oldp+180,(vlSelf->tb_core__DOT__dut__DOT__decoder_fifo__DOT__axis_fifo__DOT__control__DOT__r_head),8);
    bufp->fullCData(oldp+181,(vlSelf->tb_core__DOT__dut__DOT__decoder_fifo__DOT__axis_fifo__DOT__control__DOT__r_tail),8);
    bufp->fullCData(oldp+182,(vlSelf->tb_core__DOT__dut__DOT__decoder_fifo__DOT__axis_fifo__DOT__control__DOT__next_head),8);
    bufp->fullCData(oldp+183,(vlSelf->tb_core__DOT__dut__DOT__decoder_fifo__DOT__axis_fifo__DOT__control__DOT__next_tail),8);
    bufp->fullCData(oldp+184,(vlSelf->tb_core__DOT__dut__DOT__decoder_fifo__DOT__axis_fifo__DOT__control__DOT__rd_head),8);
    bufp->fullCData(oldp+185,(vlSelf->tb_core__DOT__dut__DOT__decoder_fifo__DOT__axis_fifo__DOT__control__DOT__wr_tail),8);
    bufp->fullBit(oldp+186,(vlSelf->tb_core__DOT__dut__DOT__decoder_fifo__DOT__axis_fifo__DOT__control__DOT__rd_ctrl_mem));
    bufp->fullBit(oldp+187,(vlSelf->tb_core__DOT__dut__DOT__decoder_fifo__DOT__axis_fifo__DOT__control__DOT__r_rd_rstn));
    bufp->fullBit(oldp+188,(vlSelf->tb_core__DOT__dut__DOT__decoder_fifo__DOT__axis_fifo__DOT__control__DOT__r_wr_rstn));
    bufp->fullBit(oldp+189,(vlSelf->tb_core__DOT__dut__DOT__decoder_fifo__DOT__axis_fifo__DOT__control__DOT__r_fwft_count));
    bufp->fullCData(oldp+190,(((IData)(vlSelf->tb_core__DOT__dut__DOT__mfifo_encoder_valid)
                                ? ((IData)(vlSelf->tb_core__DOT__dut__DOT__encoder_fifo__DOT__axis_fifo__DOT__s_rd_valid)
                                    ? (3U & (vlSelf->tb_core__DOT__dut__DOT__encoder_fifo__DOT__axis_fifo__DOT__s_rd_data 
                                             >> 0xaU))
                                    : 0U) : 0U)),2);
    bufp->fullBit(oldp+191,(((IData)(vlSelf->tb_core__DOT__dut__DOT__mfifo_encoder_valid) 
                             & ((IData)(vlSelf->tb_core__DOT__dut__DOT__encoder_fifo__DOT__axis_fifo__DOT__s_rd_valid) 
                                & vlSelf->tb_core__DOT__dut__DOT__encoder_fifo__DOT__axis_fifo__DOT__s_rd_data))));
    bufp->fullBit(oldp+192,(((IData)(vlSelf->tb_core__DOT__dut__DOT__mfifo_encoder_valid) 
                             & ((IData)(vlSelf->tb_core__DOT__dut__DOT__encoder_fifo__DOT__axis_fifo__DOT__s_rd_valid) 
                                & (vlSelf->tb_core__DOT__dut__DOT__encoder_fifo__DOT__axis_fifo__DOT__s_rd_data 
                                   >> 1U)))));
    bufp->fullIData(oldp+193,((0xc00U | (((IData)(vlSelf->tb_core__DOT__dut__DOT__mstring_decoder_data) 
                                          << 0xcU) 
                                         | ((IData)(vlSelf->tb_core__DOT__dut__DOT__mstring_decoder_user) 
                                            << 2U)))),32);
    bufp->fullBit(oldp+194,(vlSelf->tb_core__DOT__dut__DOT__encoder_fifo__DOT__axis_fifo__DOT__s_wr_full));
    bufp->fullBit(oldp+195,(vlSelf->tb_core__DOT__dut__DOT__encoder_fifo__DOT__axis_fifo__DOT__s_rd_valid));
    bufp->fullBit(oldp+196,(vlSelf->tb_core__DOT__dut__DOT__encoder_fifo__DOT__axis_fifo__DOT__control__DOT__r_rd_empty));
    bufp->fullIData(oldp+197,(((IData)(vlSelf->tb_core__DOT__dut__DOT__encoder_fifo__DOT__axis_fifo__DOT__s_rd_valid)
                                ? vlSelf->tb_core__DOT__dut__DOT__encoder_fifo__DOT__axis_fifo__DOT__s_rd_data
                                : 0U)),32);
    bufp->fullBit(oldp+198,(vlSelf->tb_core__DOT__dut__DOT__encoder_fifo__DOT__axis_control__DOT__r_rd_valid));
    bufp->fullIData(oldp+199,(vlSelf->tb_core__DOT__dut__DOT__encoder_fifo__DOT__axis_fifo__DOT__s_rd_data),32);
    bufp->fullCData(oldp+200,(vlSelf->tb_core__DOT__dut__DOT__encoder_fifo__DOT__axis_fifo__DOT__control__DOT__r_gr_tail),8);
    bufp->fullBit(oldp+201,(((~ (IData)(vlSelf->tb_core__DOT__dut__DOT__encoder_fifo__DOT__axis_fifo__DOT__s_wr_full)) 
                             & ((IData)(vlSelf->tb_core__DOT__dut__DOT__mstring_decoder_valid) 
                                & (IData)(vlSelf->tb_core__DOT__dut__DOT__encoder_fifo__DOT__axis_fifo__DOT__control__DOT__r_wr_rstn)))));
    bufp->fullCData(oldp+202,(vlSelf->tb_core__DOT__dut__DOT__encoder_fifo__DOT__axis_fifo__DOT__control__DOT__r_gr_head),8);
    bufp->fullCData(oldp+203,(vlSelf->tb_core__DOT__dut__DOT__encoder_fifo__DOT__axis_fifo__DOT__control__DOT__read_state),2);
    bufp->fullCData(oldp+204,(vlSelf->tb_core__DOT__dut__DOT__encoder_fifo__DOT__axis_fifo__DOT__control__DOT__head),8);
    bufp->fullCData(oldp+205,(vlSelf->tb_core__DOT__dut__DOT__encoder_fifo__DOT__axis_fifo__DOT__control__DOT__tail),8);
    bufp->fullCData(oldp+206,(vlSelf->tb_core__DOT__dut__DOT__encoder_fifo__DOT__axis_fifo__DOT__control__DOT__r_head),8);
    bufp->fullCData(oldp+207,(vlSelf->tb_core__DOT__dut__DOT__encoder_fifo__DOT__axis_fifo__DOT__control__DOT__r_tail),8);
    bufp->fullCData(oldp+208,(vlSelf->tb_core__DOT__dut__DOT__encoder_fifo__DOT__axis_fifo__DOT__control__DOT__next_head),8);
    bufp->fullCData(oldp+209,(vlSelf->tb_core__DOT__dut__DOT__encoder_fifo__DOT__axis_fifo__DOT__control__DOT__next_tail),8);
    bufp->fullCData(oldp+210,(vlSelf->tb_core__DOT__dut__DOT__encoder_fifo__DOT__axis_fifo__DOT__control__DOT__rd_head),8);
    bufp->fullCData(oldp+211,(vlSelf->tb_core__DOT__dut__DOT__encoder_fifo__DOT__axis_fifo__DOT__control__DOT__wr_tail),8);
    bufp->fullBit(oldp+212,(vlSelf->tb_core__DOT__dut__DOT__encoder_fifo__DOT__axis_fifo__DOT__control__DOT__rd_ctrl_mem));
    bufp->fullBit(oldp+213,(vlSelf->tb_core__DOT__dut__DOT__encoder_fifo__DOT__axis_fifo__DOT__control__DOT__r_rd_rstn));
    bufp->fullBit(oldp+214,(vlSelf->tb_core__DOT__dut__DOT__encoder_fifo__DOT__axis_fifo__DOT__control__DOT__r_wr_rstn));
    bufp->fullBit(oldp+215,(vlSelf->tb_core__DOT__dut__DOT__encoder_fifo__DOT__axis_fifo__DOT__control__DOT__r_fwft_count));
    bufp->fullCData(oldp+216,(vlSelf->tb_core__DOT__dut__DOT__incomming_char_fifo__DOT__index),3);
    bufp->fullCData(oldp+217,(vlSelf->tb_core__DOT__dut__DOT__incomming_char_fifo__DOT__index_shift),3);
    bufp->fullCData(oldp+218,(vlSelf->tb_core__DOT__dut__DOT__incomming_char_fifo__DOT__index_check),3);
    bufp->fullCData(oldp+219,(vlSelf->tb_core__DOT__dut__DOT__incomming_char_fifo__DOT__reg_data_buffer[0]),8);
    bufp->fullCData(oldp+220,(vlSelf->tb_core__DOT__dut__DOT__incomming_char_fifo__DOT__reg_data_buffer[1]),8);
    bufp->fullCData(oldp+221,(vlSelf->tb_core__DOT__dut__DOT__incomming_char_fifo__DOT__reg_data_buffer[2]),8);
    bufp->fullCData(oldp+222,(vlSelf->tb_core__DOT__dut__DOT__incomming_char_fifo__DOT__reg_data_buffer[3]),8);
    bufp->fullCData(oldp+223,(vlSelf->tb_core__DOT__dut__DOT__incomming_char_fifo__DOT__reg_valid_buffer),4);
    bufp->fullIData(oldp+224,(vlSelf->tb_core__DOT__dut__DOT__mil1553_decoder__DOT__bit_slice_index),32);
    bufp->fullQData(oldp+225,(vlSelf->tb_core__DOT__dut__DOT__mil1553_decoder__DOT__reg_data),40);
    bufp->fullBit(oldp+227,(vlSelf->tb_core__DOT__dut__DOT__mil1553_decoder__DOT__parity_bit));
    bufp->fullBit(oldp+228,(vlSelf->tb_core__DOT__dut__DOT__mil1553_decoder__DOT__delay_bit));
    bufp->fullCData(oldp+229,(vlSelf->tb_core__DOT__dut__DOT__mil1553_decoder__DOT__state),5);
    bufp->fullSData(oldp+230,(vlSelf->tb_core__DOT__dut__DOT__mil1553_decoder__DOT__data),16);
    bufp->fullCData(oldp+231,(vlSelf->tb_core__DOT__dut__DOT__mil1553_decoder__DOT__cmd),8);
    bufp->fullCData(oldp+232,(vlSelf->tb_core__DOT__dut__DOT__mil1553_decoder__DOT__p_diff),2);
    bufp->fullCData(oldp+233,(vlSelf->tb_core__DOT__dut__DOT__mil1553_decoder__DOT__skip_counter),6);
    bufp->fullCData(oldp+234,(vlSelf->tb_core__DOT__dut__DOT__mil1553_decoder__DOT__pause_counter),8);
    bufp->fullCData(oldp+235,(vlSelf->tb_core__DOT__dut__DOT__mil1553_decoder__DOT__trans_counter),6);
    bufp->fullIData(oldp+236,(vlSelf->tb_core__DOT__dut__DOT__mil1553_encoder__DOT__xor_index),32);
    bufp->fullIData(oldp+237,(vlSelf->tb_core__DOT__dut__DOT__mil1553_encoder__DOT__cycle_index),32);
    bufp->fullQData(oldp+238,(vlSelf->tb_core__DOT__dut__DOT__mil1553_encoder__DOT__reg_data),40);
    bufp->fullBit(oldp+240,(vlSelf->tb_core__DOT__dut__DOT__mil1553_encoder__DOT__parity_bit));
    bufp->fullCData(oldp+241,(vlSelf->tb_core__DOT__dut__DOT__mil1553_encoder__DOT__state),3);
    bufp->fullSData(oldp+242,(vlSelf->tb_core__DOT__dut__DOT__mil1553_encoder__DOT__data),16);
    bufp->fullSData(oldp+243,(vlSelf->tb_core__DOT__dut__DOT__mil1553_encoder__DOT__r_data),16);
    bufp->fullCData(oldp+244,(vlSelf->tb_core__DOT__dut__DOT__mil1553_encoder__DOT__cmd),8);
    bufp->fullCData(oldp+245,(vlSelf->tb_core__DOT__dut__DOT__mil1553_encoder__DOT__skip_counter),6);
    bufp->fullCData(oldp+246,(vlSelf->tb_core__DOT__dut__DOT__mil1553_encoder__DOT__pause_counter),8);
    bufp->fullCData(oldp+247,(vlSelf->tb_core__DOT__dut__DOT__mil1553_encoder__DOT__trans_counter),6);
    bufp->fullCData(oldp+248,(vlSelf->tb_core__DOT__dut__DOT__mil1553_encoder__DOT__prev_trans_counter),6);
    bufp->fullCData(oldp+249,(vlSelf->tb_core__DOT__dut__DOT__outgoing_char_fifo__DOT__index),3);
    bufp->fullCData(oldp+250,(vlSelf->tb_core__DOT__dut__DOT__outgoing_char_fifo__DOT__index_shift),3);
    bufp->fullCData(oldp+251,(vlSelf->tb_core__DOT__dut__DOT__outgoing_char_fifo__DOT__index_check),3);
    bufp->fullCData(oldp+252,(vlSelf->tb_core__DOT__dut__DOT__outgoing_char_fifo__DOT__reg_data_buffer[0]),8);
    bufp->fullCData(oldp+253,(vlSelf->tb_core__DOT__dut__DOT__outgoing_char_fifo__DOT__reg_data_buffer[1]),8);
    bufp->fullCData(oldp+254,(vlSelf->tb_core__DOT__dut__DOT__outgoing_char_fifo__DOT__reg_data_buffer[2]),8);
    bufp->fullCData(oldp+255,(vlSelf->tb_core__DOT__dut__DOT__outgoing_char_fifo__DOT__reg_data_buffer[3]),8);
    bufp->fullCData(oldp+256,(vlSelf->tb_core__DOT__dut__DOT__outgoing_char_fifo__DOT__reg_valid_buffer),4);
    bufp->fullBit(oldp+257,(vlSelf->tb_core__DOT__dut__DOT__string_decoder__DOT__p_m_axis_tready));
    bufp->fullBit(oldp+258,(vlSelf->tb_core__DOT__dut__DOT__string_decoder__DOT__force_s_axis_tready));
    bufp->fullBit(oldp+259,(vlSelf->tb_core__DOT__dut__DOT__string_encoder__DOT__m_axis_tlast));
    bufp->fullIData(oldp+260,(vlSelf->tb_core__DOT__dut__DOT__string_encoder__DOT__m_axis_tkeep),21);
    bufp->fullBit(oldp+261,(vlSelf->tb_core__DOT__dut__DOT__string_encoder__DOT__p_m_axis_tready));
    bufp->fullCData(oldp+262,(vlSelf->tb_core__DOT__dut__DOT__string_to_char__DOT__genblk1__DOT__reg_data_buffer[0]),8);
    bufp->fullCData(oldp+263,(vlSelf->tb_core__DOT__dut__DOT__string_to_char__DOT__genblk1__DOT__reg_data_buffer[1]),8);
    bufp->fullCData(oldp+264,(vlSelf->tb_core__DOT__dut__DOT__string_to_char__DOT__genblk1__DOT__reg_data_buffer[2]),8);
    bufp->fullCData(oldp+265,(vlSelf->tb_core__DOT__dut__DOT__string_to_char__DOT__genblk1__DOT__reg_data_buffer[3]),8);
    bufp->fullCData(oldp+266,(vlSelf->tb_core__DOT__dut__DOT__string_to_char__DOT__genblk1__DOT__reg_data_buffer[4]),8);
    bufp->fullCData(oldp+267,(vlSelf->tb_core__DOT__dut__DOT__string_to_char__DOT__genblk1__DOT__reg_data_buffer[5]),8);
    bufp->fullCData(oldp+268,(vlSelf->tb_core__DOT__dut__DOT__string_to_char__DOT__genblk1__DOT__reg_data_buffer[6]),8);
    bufp->fullCData(oldp+269,(vlSelf->tb_core__DOT__dut__DOT__string_to_char__DOT__genblk1__DOT__reg_data_buffer[7]),8);
    bufp->fullCData(oldp+270,(vlSelf->tb_core__DOT__dut__DOT__string_to_char__DOT__genblk1__DOT__reg_data_buffer[8]),8);
    bufp->fullCData(oldp+271,(vlSelf->tb_core__DOT__dut__DOT__string_to_char__DOT__genblk1__DOT__reg_data_buffer[9]),8);
    bufp->fullCData(oldp+272,(vlSelf->tb_core__DOT__dut__DOT__string_to_char__DOT__genblk1__DOT__reg_data_buffer[10]),8);
    bufp->fullCData(oldp+273,(vlSelf->tb_core__DOT__dut__DOT__string_to_char__DOT__genblk1__DOT__reg_data_buffer[11]),8);
    bufp->fullCData(oldp+274,(vlSelf->tb_core__DOT__dut__DOT__string_to_char__DOT__genblk1__DOT__reg_data_buffer[12]),8);
    bufp->fullCData(oldp+275,(vlSelf->tb_core__DOT__dut__DOT__string_to_char__DOT__genblk1__DOT__reg_data_buffer[13]),8);
    bufp->fullCData(oldp+276,(vlSelf->tb_core__DOT__dut__DOT__string_to_char__DOT__genblk1__DOT__reg_data_buffer[14]),8);
    bufp->fullCData(oldp+277,(vlSelf->tb_core__DOT__dut__DOT__string_to_char__DOT__genblk1__DOT__reg_data_buffer[15]),8);
    bufp->fullCData(oldp+278,(vlSelf->tb_core__DOT__dut__DOT__string_to_char__DOT__genblk1__DOT__reg_data_buffer[16]),8);
    bufp->fullCData(oldp+279,(vlSelf->tb_core__DOT__dut__DOT__string_to_char__DOT__genblk1__DOT__reg_data_buffer[17]),8);
    bufp->fullCData(oldp+280,(vlSelf->tb_core__DOT__dut__DOT__string_to_char__DOT__genblk1__DOT__reg_data_buffer[18]),8);
    bufp->fullCData(oldp+281,(vlSelf->tb_core__DOT__dut__DOT__string_to_char__DOT__genblk1__DOT__reg_data_buffer[19]),8);
    bufp->fullCData(oldp+282,(vlSelf->tb_core__DOT__dut__DOT__string_to_char__DOT__genblk1__DOT__reg_data_buffer[20]),8);
    bufp->fullCData(oldp+283,(vlSelf->tb_core__DOT__dut__DOT__string_to_char__DOT__genblk1__DOT__reg_m_axis_tdata),8);
    bufp->fullCData(oldp+284,(vlSelf->tb_core__DOT__dut__DOT__string_to_char__DOT__genblk1__DOT__counter),6);
    bufp->fullCData(oldp+285,(vlSelf->tb_core__DOT__dut__DOT__string_to_char__DOT__genblk1__DOT__index),6);
    bufp->fullCData(oldp+286,(vlSelf->tb_core__DOT__dut__DOT__string_to_char__DOT__genblk1__DOT__split_s_axis_tdata[0]),8);
    bufp->fullCData(oldp+287,(vlSelf->tb_core__DOT__dut__DOT__string_to_char__DOT__genblk1__DOT__split_s_axis_tdata[1]),8);
    bufp->fullCData(oldp+288,(vlSelf->tb_core__DOT__dut__DOT__string_to_char__DOT__genblk1__DOT__split_s_axis_tdata[2]),8);
    bufp->fullCData(oldp+289,(vlSelf->tb_core__DOT__dut__DOT__string_to_char__DOT__genblk1__DOT__split_s_axis_tdata[3]),8);
    bufp->fullCData(oldp+290,(vlSelf->tb_core__DOT__dut__DOT__string_to_char__DOT__genblk1__DOT__split_s_axis_tdata[4]),8);
    bufp->fullCData(oldp+291,(vlSelf->tb_core__DOT__dut__DOT__string_to_char__DOT__genblk1__DOT__split_s_axis_tdata[5]),8);
    bufp->fullCData(oldp+292,(vlSelf->tb_core__DOT__dut__DOT__string_to_char__DOT__genblk1__DOT__split_s_axis_tdata[6]),8);
    bufp->fullCData(oldp+293,(vlSelf->tb_core__DOT__dut__DOT__string_to_char__DOT__genblk1__DOT__split_s_axis_tdata[7]),8);
    bufp->fullCData(oldp+294,(vlSelf->tb_core__DOT__dut__DOT__string_to_char__DOT__genblk1__DOT__split_s_axis_tdata[8]),8);
    bufp->fullCData(oldp+295,(vlSelf->tb_core__DOT__dut__DOT__string_to_char__DOT__genblk1__DOT__split_s_axis_tdata[9]),8);
    bufp->fullCData(oldp+296,(vlSelf->tb_core__DOT__dut__DOT__string_to_char__DOT__genblk1__DOT__split_s_axis_tdata[10]),8);
    bufp->fullCData(oldp+297,(vlSelf->tb_core__DOT__dut__DOT__string_to_char__DOT__genblk1__DOT__split_s_axis_tdata[11]),8);
    bufp->fullCData(oldp+298,(vlSelf->tb_core__DOT__dut__DOT__string_to_char__DOT__genblk1__DOT__split_s_axis_tdata[12]),8);
    bufp->fullCData(oldp+299,(vlSelf->tb_core__DOT__dut__DOT__string_to_char__DOT__genblk1__DOT__split_s_axis_tdata[13]),8);
    bufp->fullCData(oldp+300,(vlSelf->tb_core__DOT__dut__DOT__string_to_char__DOT__genblk1__DOT__split_s_axis_tdata[14]),8);
    bufp->fullCData(oldp+301,(vlSelf->tb_core__DOT__dut__DOT__string_to_char__DOT__genblk1__DOT__split_s_axis_tdata[15]),8);
    bufp->fullCData(oldp+302,(vlSelf->tb_core__DOT__dut__DOT__string_to_char__DOT__genblk1__DOT__split_s_axis_tdata[16]),8);
    bufp->fullCData(oldp+303,(vlSelf->tb_core__DOT__dut__DOT__string_to_char__DOT__genblk1__DOT__split_s_axis_tdata[17]),8);
    bufp->fullCData(oldp+304,(vlSelf->tb_core__DOT__dut__DOT__string_to_char__DOT__genblk1__DOT__split_s_axis_tdata[18]),8);
    bufp->fullCData(oldp+305,(vlSelf->tb_core__DOT__dut__DOT__string_to_char__DOT__genblk1__DOT__split_s_axis_tdata[19]),8);
    bufp->fullCData(oldp+306,(vlSelf->tb_core__DOT__dut__DOT__string_to_char__DOT__genblk1__DOT__split_s_axis_tdata[20]),8);
    bufp->fullBit(oldp+307,(vlSelf->tb_core__DOT__dut__DOT__string_to_char__DOT__genblk1__DOT__p_m_axis_tready));
    bufp->fullBit(oldp+308,(vlSelf->tb_core__DOT__tb_data_clk));
    bufp->fullBit(oldp+309,(vlSelf->tb_core__DOT__tb_rst));
    bufp->fullBit(oldp+310,((1U & (~ (IData)(vlSelf->tb_core__DOT__tb_rst)))));
    bufp->fullBit(oldp+311,((((IData)(vlSelf->tb_core__DOT__dut__DOT__decoder_fifo__DOT__axis_fifo__DOT__control__DOT__r_tail) 
                              != (IData)(vlSelf->tb_core__DOT__dut__DOT__decoder_fifo__DOT__axis_fifo__DOT__control__DOT__rd_head)) 
                             & (((IData)(vlSelf->tb_core__DOT__dut__DOT__decoder_fifo__DOT__axis_fifo__DOT__control__DOT__rd_ctrl_mem) 
                                 | (IData)(vlSelf->tb_core__DOT__dut__DOT__mfifo_decoder_ready)) 
                                & (IData)(vlSelf->tb_core__DOT__dut__DOT__decoder_fifo__DOT__axis_fifo__DOT__control__DOT__r_rd_rstn)))));
    bufp->fullBit(oldp+312,((((IData)(vlSelf->tb_core__DOT__dut__DOT__encoder_fifo__DOT__axis_fifo__DOT__control__DOT__r_tail) 
                              != (IData)(vlSelf->tb_core__DOT__dut__DOT__encoder_fifo__DOT__axis_fifo__DOT__control__DOT__rd_head)) 
                             & (((IData)(vlSelf->tb_core__DOT__dut__DOT__encoder_fifo__DOT__axis_fifo__DOT__control__DOT__rd_ctrl_mem) 
                                 | (IData)(vlSelf->tb_core__DOT__dut__DOT__mfifo_encoder_ready)) 
                                & (IData)(vlSelf->tb_core__DOT__dut__DOT__encoder_fifo__DOT__axis_fifo__DOT__control__DOT__r_rd_rstn)))));
    bufp->fullIData(oldp+313,(0x14U),32);
    bufp->fullIData(oldp+314,(0x3e8U),32);
    bufp->fullIData(oldp+315,(0x2faf080U),32);
    bufp->fullIData(oldp+316,(0x1388U),32);
    bufp->fullIData(oldp+317,(0x32U),32);
    bufp->fullIData(oldp+318,(0x96U),32);
    bufp->fullQData(oldp+319,(0x3fffffe000000ULL),50);
    bufp->fullWData(oldp+321,(Vtb_core__ConstPool__CONST_h98c30281_0),1000);
    __Vtemp_h398d963f__0[0U] = 0xffffffffU;
    __Vtemp_h398d963f__0[1U] = 0xffffffffU;
    __Vtemp_h398d963f__0[2U] = 0x7ffU;
    __Vtemp_h398d963f__0[3U] = 0U;
    __Vtemp_h398d963f__0[4U] = 0U;
    bufp->fullWData(oldp+353,(__Vtemp_h398d963f__0),150);
    __Vtemp_h80bccfe2__0[0U] = 0U;
    __Vtemp_h80bccfe2__0[1U] = 0U;
    __Vtemp_h80bccfe2__0[2U] = 0xfffff800U;
    __Vtemp_h80bccfe2__0[3U] = 0xffffffffU;
    __Vtemp_h80bccfe2__0[4U] = 0x3fffffU;
    bufp->fullWData(oldp+358,(__Vtemp_h80bccfe2__0),150);
    bufp->fullIData(oldp+363,(0xf4240U),32);
    bufp->fullIData(oldp+364,(0U),32);
    bufp->fullIData(oldp+365,(1U),32);
    bufp->fullIData(oldp+366,(8U),32);
    bufp->fullIData(oldp+367,(0x1e8480U),32);
    bufp->fullBit(oldp+368,(1U));
    bufp->fullBit(oldp+369,(vlSelf->tb_core__DOT__dut__DOT__cts_UART));
    bufp->fullBit(oldp+370,(0U));
    bufp->fullIData(oldp+371,(1U),32);
    bufp->fullIData(oldp+372,(0xaU),32);
    bufp->fullCData(oldp+373,(1U),3);
    bufp->fullCData(oldp+374,(2U),3);
    bufp->fullCData(oldp+375,(3U),3);
    bufp->fullCData(oldp+376,(4U),3);
    bufp->fullCData(oldp+377,(1U),2);
    bufp->fullCData(oldp+378,(3U),2);
    bufp->fullCData(oldp+379,(0U),3);
    bufp->fullIData(oldp+380,(0x15U),32);
    bufp->fullIData(oldp+381,(0x100U),32);
    bufp->fullIData(oldp+382,(2U),32);
    bufp->fullQData(oldp+383,(0x626c6f636bULL),40);
    bufp->fullIData(oldp+385,(0x1cU),32);
    bufp->fullIData(oldp+386,(0xcU),32);
    bufp->fullIData(oldp+387,(0xaU),32);
    bufp->fullIData(oldp+388,(4U),32);
    bufp->fullCData(oldp+389,(0xffU),8);
    bufp->fullCData(oldp+390,(vlSelf->tb_core__DOT__dut__DOT__decoder_fifo__DOT__axis_control__DOT__s_tlast_count),8);
    bufp->fullBit(oldp+391,(vlSelf->tb_core__DOT__dut__DOT__decoder_fifo__DOT__axis_control__DOT__r_mclk_s_axis_tlast));
    bufp->fullBit(oldp+392,(vlSelf->tb_core__DOT__dut__DOT__decoder_fifo__DOT__axis_control__DOT__rr_mclk_s_axis_tlast));
    bufp->fullBit(oldp+393,(vlSelf->tb_core__DOT__dut__DOT__decoder_fifo__DOT__axis_control__DOT__r_mclk_w_full));
    bufp->fullBit(oldp+394,(vlSelf->tb_core__DOT__dut__DOT__decoder_fifo__DOT__axis_control__DOT__rr_mclk_w_full));
    bufp->fullBit(oldp+395,(vlSelf->tb_core__DOT__dut__DOT__decoder_fifo__DOT__axis_control__DOT__s_tlast_full));
    bufp->fullCData(oldp+396,(0U),2);
    bufp->fullCData(oldp+397,(2U),2);
    bufp->fullCData(oldp+398,(0U),8);
    bufp->fullIData(oldp+399,(vlSelf->tb_core__DOT__dut__DOT__decoder_fifo__DOT__axis_fifo__DOT__pipe__DOT__index),32);
    bufp->fullCData(oldp+400,(vlSelf->tb_core__DOT__dut__DOT__decoder_fifo__DOT__axis_fifo__DOT__pipe__DOT__reg_rd_valid),2);
    bufp->fullCData(oldp+401,(vlSelf->tb_core__DOT__dut__DOT__decoder_fifo__DOT__axis_fifo__DOT__pipe__DOT__reg_rd_empty),2);
    bufp->fullIData(oldp+402,(vlSelf->tb_core__DOT__dut__DOT__decoder_fifo__DOT__axis_fifo__DOT__pipe__DOT__reg_rd_data[0]),32);
    bufp->fullIData(oldp+403,(vlSelf->tb_core__DOT__dut__DOT__decoder_fifo__DOT__axis_fifo__DOT__pipe__DOT__reg_rd_data[1]),32);
    bufp->fullCData(oldp+404,(vlSelf->tb_core__DOT__dut__DOT__decoder_fifo__DOT__axis_fifo__DOT__pipe__DOT__reg_wr_ack),2);
    bufp->fullCData(oldp+405,(vlSelf->tb_core__DOT__dut__DOT__decoder_fifo__DOT__axis_fifo__DOT__pipe__DOT__reg_wr_full),2);
    bufp->fullIData(oldp+406,(vlSelf->tb_core__DOT__dut__DOT__decoder_fifo__DOT__axis_fifo__DOT__pipe__DOT__reg_wr_data[0]),32);
    bufp->fullIData(oldp+407,(vlSelf->tb_core__DOT__dut__DOT__decoder_fifo__DOT__axis_fifo__DOT__pipe__DOT__reg_wr_data[1]),32);
    bufp->fullBit(oldp+408,(vlSelf->tb_core__DOT__dut__DOT__decoder_fifo__DOT__axis_fifo__DOT__pipe__DOT__reg_data_count[0]));
    bufp->fullBit(oldp+409,(vlSelf->tb_core__DOT__dut__DOT__decoder_fifo__DOT__axis_fifo__DOT__pipe__DOT__reg_data_count[1]));
    bufp->fullCData(oldp+410,(vlSelf->tb_core__DOT__dut__DOT__encoder_fifo__DOT__axis_control__DOT__s_tlast_count),8);
    bufp->fullBit(oldp+411,(vlSelf->tb_core__DOT__dut__DOT__encoder_fifo__DOT__axis_control__DOT__r_mclk_s_axis_tlast));
    bufp->fullBit(oldp+412,(vlSelf->tb_core__DOT__dut__DOT__encoder_fifo__DOT__axis_control__DOT__rr_mclk_s_axis_tlast));
    bufp->fullBit(oldp+413,(vlSelf->tb_core__DOT__dut__DOT__encoder_fifo__DOT__axis_control__DOT__r_mclk_w_full));
    bufp->fullBit(oldp+414,(vlSelf->tb_core__DOT__dut__DOT__encoder_fifo__DOT__axis_control__DOT__rr_mclk_w_full));
    bufp->fullBit(oldp+415,(vlSelf->tb_core__DOT__dut__DOT__encoder_fifo__DOT__axis_control__DOT__s_tlast_full));
    bufp->fullIData(oldp+416,(vlSelf->tb_core__DOT__dut__DOT__encoder_fifo__DOT__axis_fifo__DOT__pipe__DOT__index),32);
    bufp->fullCData(oldp+417,(vlSelf->tb_core__DOT__dut__DOT__encoder_fifo__DOT__axis_fifo__DOT__pipe__DOT__reg_rd_valid),2);
    bufp->fullCData(oldp+418,(vlSelf->tb_core__DOT__dut__DOT__encoder_fifo__DOT__axis_fifo__DOT__pipe__DOT__reg_rd_empty),2);
    bufp->fullIData(oldp+419,(vlSelf->tb_core__DOT__dut__DOT__encoder_fifo__DOT__axis_fifo__DOT__pipe__DOT__reg_rd_data[0]),32);
    bufp->fullIData(oldp+420,(vlSelf->tb_core__DOT__dut__DOT__encoder_fifo__DOT__axis_fifo__DOT__pipe__DOT__reg_rd_data[1]),32);
    bufp->fullCData(oldp+421,(vlSelf->tb_core__DOT__dut__DOT__encoder_fifo__DOT__axis_fifo__DOT__pipe__DOT__reg_wr_ack),2);
    bufp->fullCData(oldp+422,(vlSelf->tb_core__DOT__dut__DOT__encoder_fifo__DOT__axis_fifo__DOT__pipe__DOT__reg_wr_full),2);
    bufp->fullIData(oldp+423,(vlSelf->tb_core__DOT__dut__DOT__encoder_fifo__DOT__axis_fifo__DOT__pipe__DOT__reg_wr_data[0]),32);
    bufp->fullIData(oldp+424,(vlSelf->tb_core__DOT__dut__DOT__encoder_fifo__DOT__axis_fifo__DOT__pipe__DOT__reg_wr_data[1]),32);
    bufp->fullBit(oldp+425,(vlSelf->tb_core__DOT__dut__DOT__encoder_fifo__DOT__axis_fifo__DOT__pipe__DOT__reg_data_count[0]));
    bufp->fullBit(oldp+426,(vlSelf->tb_core__DOT__dut__DOT__encoder_fifo__DOT__axis_fifo__DOT__pipe__DOT__reg_data_count[1]));
    bufp->fullIData(oldp+427,(0xf4240U),32);
    bufp->fullIData(oldp+428,(2U),32);
    bufp->fullIData(oldp+429,(0xc8U),32);
    bufp->fullIData(oldp+430,(0x19U),32);
    bufp->fullIData(oldp+431,(0xcU),32);
    bufp->fullIData(oldp+432,(0U),32);
    bufp->fullIData(oldp+433,(6U),32);
    bufp->fullIData(oldp+434,(0x14U),32);
    bufp->fullIData(oldp+435,(0x28U),32);
    bufp->fullCData(oldp+436,(1U),5);
    bufp->fullCData(oldp+437,(3U),5);
    bufp->fullCData(oldp+438,(7U),5);
    bufp->fullCData(oldp+439,(0xfU),5);
    bufp->fullCData(oldp+440,(0x1fU),5);
    bufp->fullCData(oldp+441,(0U),5);
    bufp->fullCData(oldp+442,(7U),6);
    bufp->fullCData(oldp+443,(0x38U),6);
    bufp->fullQData(oldp+444,(0xaaaaaaaaaaULL),40);
    bufp->fullIData(oldp+446,(0x18U),32);
    bufp->fullCData(oldp+447,(5U),3);
    bufp->fullCData(oldp+448,(6U),3);
    bufp->fullBit(oldp+449,(1U));
    bufp->fullIData(oldp+450,(vlSelf->tb_core__DOT__dut__DOT__string_decoder__DOT__s_axis_tkeep),21);
    bufp->fullBit(oldp+451,(vlSelf->tb_core__DOT__dut__DOT__string_decoder__DOT__s_axis_tlast));
}
